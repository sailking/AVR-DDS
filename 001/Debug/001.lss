
001.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000264  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000061  00800100  00800100  000002d8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002d8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000308  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  00000348  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a43  00000000  00000000  00000448  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000050a  00000000  00000000  00000e8b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006f2  00000000  00000000  00001395  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000260  00000000  00000000  00001a88  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000395  00000000  00000000  00001ce8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000586  00000000  00000000  0000207d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00002603  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	4b c0       	rjmp	.+150    	; 0xac <__bad_interrupt>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	9b c0       	rjmp	.+310    	; 0x15c <__vector_9>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	a7 c0       	rjmp	.+334    	; 0x1a0 <__vector_20>
  52:	00 00       	nop
  54:	d0 c0       	rjmp	.+416    	; 0x1f6 <__vector_21>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a1 36       	cpi	r26, 0x61	; 97
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	02 d0       	rcall	.+4      	; 0xae <main>
  aa:	da c0       	rjmp	.+436    	; 0x260 <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <main>:


int main (void)
{
	// set PA3-PA7 as input and activated internal Pull-Up
	DDRA &= ~((1<<PINA3)|(1<<PINA4)|(1<<PINA5)|(1<<PINA6)|(1<<PINA7));		// Required for DMM Board 2013
  ae:	81 b1       	in	r24, 0x01	; 1
  b0:	87 70       	andi	r24, 0x07	; 7
  b2:	81 b9       	out	0x01, r24	; 1
	PORTA |= ((1<<PINA3)|(1<<PINA4)|(1<<PINA5)|(1<<PINA6)|(1<<PINA7));		// Required for DMM Board 2013
  b4:	82 b1       	in	r24, 0x02	; 2
  b6:	88 6f       	ori	r24, 0xF8	; 248
  b8:	82 b9       	out	0x02, r24	; 2
	
	// set PB0-PB3 as output
	DDRB = 0x0F;
  ba:	8f e0       	ldi	r24, 0x0F	; 15
  bc:	84 b9       	out	0x04, r24	; 4
	// set PB0-PB3 on high-level
	PORTB |= 0x0F;		// Required for DMM Board DMM Board 2013
  be:	85 b1       	in	r24, 0x05	; 5
  c0:	8f 60       	ori	r24, 0x0F	; 15
  c2:	85 b9       	out	0x05, r24	; 5
  c4:	8a e0       	ldi	r24, 0x0A	; 10
  c6:	90 e0       	ldi	r25, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c8:	ef e3       	ldi	r30, 0x3F	; 63
  ca:	fc e9       	ldi	r31, 0x9C	; 156
  cc:	31 97       	sbiw	r30, 0x01	; 1
  ce:	f1 f7       	brne	.-4      	; 0xcc <main+0x1e>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <main+0x24>
  d2:	00 00       	nop
  d4:	01 97       	sbiw	r24, 0x01	; 1
	int i;
	for (i =0;i<10;i++)
  d6:	c1 f7       	brne	.-16     	; 0xc8 <main+0x1a>
	{
		_delay_ms(10);
	}
  d8:	80 e0       	ldi	r24, 0x00	; 0
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	08 95       	ret

000000de <_fifo_get>:
  de:	fc 01       	movw	r30, r24
  e0:	a2 81       	ldd	r26, Z+2	; 0x02
  e2:	b3 81       	ldd	r27, Z+3	; 0x03
  e4:	9d 01       	movw	r18, r26
  e6:	2f 5f       	subi	r18, 0xFF	; 255
  e8:	3f 4f       	sbci	r19, 0xFF	; 255
  ea:	8c 91       	ld	r24, X
  ec:	96 81       	ldd	r25, Z+6	; 0x06
  ee:	91 50       	subi	r25, 0x01	; 1
  f0:	19 f4       	brne	.+6      	; 0xf8 <_fifo_get+0x1a>
  f2:	91 81       	ldd	r25, Z+1	; 0x01
  f4:	29 1b       	sub	r18, r25
  f6:	31 09       	sbc	r19, r1
  f8:	33 83       	std	Z+3, r19	; 0x03
  fa:	22 83       	std	Z+2, r18	; 0x02
  fc:	96 83       	std	Z+6, r25	; 0x06
  fe:	2f b7       	in	r18, 0x3f	; 63
 100:	f8 94       	cli
 102:	90 81       	ld	r25, Z
 104:	91 50       	subi	r25, 0x01	; 1
 106:	90 83       	st	Z, r25
 108:	2f bf       	out	0x3f, r18	; 63
 10a:	08 95       	ret

0000010c <fifo_get_nowait>:
 10c:	fc 01       	movw	r30, r24
 10e:	20 81       	ld	r18, Z
 110:	22 23       	and	r18, r18
 112:	19 f0       	breq	.+6      	; 0x11a <fifo_get_nowait+0xe>
 114:	e4 df       	rcall	.-56     	; 0xde <_fifo_get>
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	08 95       	ret
 11a:	8f ef       	ldi	r24, 0xFF	; 255
 11c:	9f ef       	ldi	r25, 0xFF	; 255
 11e:	08 95       	ret

00000120 <fifo_put>:
 120:	fc 01       	movw	r30, r24
 122:	90 81       	ld	r25, Z
 124:	81 81       	ldd	r24, Z+1	; 0x01
 126:	98 17       	cp	r25, r24
 128:	b8 f4       	brcc	.+46     	; 0x158 <fifo_put+0x38>
 12a:	a4 81       	ldd	r26, Z+4	; 0x04
 12c:	b5 81       	ldd	r27, Z+5	; 0x05
 12e:	9d 01       	movw	r18, r26
 130:	2f 5f       	subi	r18, 0xFF	; 255
 132:	3f 4f       	sbci	r19, 0xFF	; 255
 134:	6c 93       	st	X, r22
 136:	87 81       	ldd	r24, Z+7	; 0x07
 138:	81 50       	subi	r24, 0x01	; 1
 13a:	19 f4       	brne	.+6      	; 0x142 <fifo_put+0x22>
 13c:	81 81       	ldd	r24, Z+1	; 0x01
 13e:	28 1b       	sub	r18, r24
 140:	31 09       	sbc	r19, r1
 142:	87 83       	std	Z+7, r24	; 0x07
 144:	35 83       	std	Z+5, r19	; 0x05
 146:	24 83       	std	Z+4, r18	; 0x04
 148:	9f b7       	in	r25, 0x3f	; 63
 14a:	f8 94       	cli
 14c:	80 81       	ld	r24, Z
 14e:	8f 5f       	subi	r24, 0xFF	; 255
 150:	80 83       	st	Z, r24
 152:	9f bf       	out	0x3f, r25	; 63
 154:	81 e0       	ldi	r24, 0x01	; 1
 156:	08 95       	ret
 158:	80 e0       	ldi	r24, 0x00	; 0
 15a:	08 95       	ret

0000015c <__vector_9>:
 15c:	1f 92       	push	r1
 15e:	0f 92       	push	r0
 160:	0f b6       	in	r0, 0x3f	; 63
 162:	0f 92       	push	r0
 164:	11 24       	eor	r1, r1
 166:	0b b6       	in	r0, 0x3b	; 59
 168:	0f 92       	push	r0
 16a:	8f 93       	push	r24
 16c:	ef 93       	push	r30
 16e:	ff 93       	push	r31
 170:	e3 eb       	ldi	r30, 0xB3	; 179
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	80 81       	ld	r24, Z
 176:	83 58       	subi	r24, 0x83	; 131
 178:	80 83       	st	Z, r24
 17a:	80 91 00 01 	lds	r24, 0x0100
 17e:	88 23       	and	r24, r24
 180:	29 f0       	breq	.+10     	; 0x18c <__vector_9+0x30>
 182:	80 91 00 01 	lds	r24, 0x0100
 186:	81 50       	subi	r24, 0x01	; 1
 188:	80 93 00 01 	sts	0x0100, r24
 18c:	ff 91       	pop	r31
 18e:	ef 91       	pop	r30
 190:	8f 91       	pop	r24
 192:	0f 90       	pop	r0
 194:	0b be       	out	0x3b, r0	; 59
 196:	0f 90       	pop	r0
 198:	0f be       	out	0x3f, r0	; 63
 19a:	0f 90       	pop	r0
 19c:	1f 90       	pop	r1
 19e:	18 95       	reti

000001a0 <__vector_20>:
 1a0:	1f 92       	push	r1
 1a2:	0f 92       	push	r0
 1a4:	0f b6       	in	r0, 0x3f	; 63
 1a6:	0f 92       	push	r0
 1a8:	11 24       	eor	r1, r1
 1aa:	0b b6       	in	r0, 0x3b	; 59
 1ac:	0f 92       	push	r0
 1ae:	2f 93       	push	r18
 1b0:	3f 93       	push	r19
 1b2:	4f 93       	push	r20
 1b4:	5f 93       	push	r21
 1b6:	6f 93       	push	r22
 1b8:	7f 93       	push	r23
 1ba:	8f 93       	push	r24
 1bc:	9f 93       	push	r25
 1be:	af 93       	push	r26
 1c0:	bf 93       	push	r27
 1c2:	ef 93       	push	r30
 1c4:	ff 93       	push	r31
 1c6:	60 91 c6 00 	lds	r22, 0x00C6
 1ca:	89 e4       	ldi	r24, 0x49	; 73
 1cc:	91 e0       	ldi	r25, 0x01	; 1
 1ce:	a8 df       	rcall	.-176    	; 0x120 <fifo_put>
 1d0:	ff 91       	pop	r31
 1d2:	ef 91       	pop	r30
 1d4:	bf 91       	pop	r27
 1d6:	af 91       	pop	r26
 1d8:	9f 91       	pop	r25
 1da:	8f 91       	pop	r24
 1dc:	7f 91       	pop	r23
 1de:	6f 91       	pop	r22
 1e0:	5f 91       	pop	r21
 1e2:	4f 91       	pop	r20
 1e4:	3f 91       	pop	r19
 1e6:	2f 91       	pop	r18
 1e8:	0f 90       	pop	r0
 1ea:	0b be       	out	0x3b, r0	; 59
 1ec:	0f 90       	pop	r0
 1ee:	0f be       	out	0x3f, r0	; 63
 1f0:	0f 90       	pop	r0
 1f2:	1f 90       	pop	r1
 1f4:	18 95       	reti

000001f6 <__vector_21>:
 1f6:	1f 92       	push	r1
 1f8:	0f 92       	push	r0
 1fa:	0f b6       	in	r0, 0x3f	; 63
 1fc:	0f 92       	push	r0
 1fe:	11 24       	eor	r1, r1
 200:	0b b6       	in	r0, 0x3b	; 59
 202:	0f 92       	push	r0
 204:	2f 93       	push	r18
 206:	3f 93       	push	r19
 208:	4f 93       	push	r20
 20a:	5f 93       	push	r21
 20c:	6f 93       	push	r22
 20e:	7f 93       	push	r23
 210:	8f 93       	push	r24
 212:	9f 93       	push	r25
 214:	af 93       	push	r26
 216:	bf 93       	push	r27
 218:	ef 93       	push	r30
 21a:	ff 93       	push	r31
 21c:	80 91 01 01 	lds	r24, 0x0101
 220:	88 23       	and	r24, r24
 222:	31 f0       	breq	.+12     	; 0x230 <__vector_21+0x3a>
 224:	81 e0       	ldi	r24, 0x01	; 1
 226:	91 e0       	ldi	r25, 0x01	; 1
 228:	71 df       	rcall	.-286    	; 0x10c <fifo_get_nowait>
 22a:	80 93 c6 00 	sts	0x00C6, r24
 22e:	05 c0       	rjmp	.+10     	; 0x23a <__vector_21+0x44>
 230:	e1 ec       	ldi	r30, 0xC1	; 193
 232:	f0 e0       	ldi	r31, 0x00	; 0
 234:	80 81       	ld	r24, Z
 236:	8f 7d       	andi	r24, 0xDF	; 223
 238:	80 83       	st	Z, r24
 23a:	ff 91       	pop	r31
 23c:	ef 91       	pop	r30
 23e:	bf 91       	pop	r27
 240:	af 91       	pop	r26
 242:	9f 91       	pop	r25
 244:	8f 91       	pop	r24
 246:	7f 91       	pop	r23
 248:	6f 91       	pop	r22
 24a:	5f 91       	pop	r21
 24c:	4f 91       	pop	r20
 24e:	3f 91       	pop	r19
 250:	2f 91       	pop	r18
 252:	0f 90       	pop	r0
 254:	0b be       	out	0x3b, r0	; 59
 256:	0f 90       	pop	r0
 258:	0f be       	out	0x3f, r0	; 63
 25a:	0f 90       	pop	r0
 25c:	1f 90       	pop	r1
 25e:	18 95       	reti

00000260 <_exit>:
 260:	f8 94       	cli

00000262 <__stop_program>:
 262:	ff cf       	rjmp	.-2      	; 0x262 <__stop_program>
