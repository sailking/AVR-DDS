
DDS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a0  00800100  0000155e  000015f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000155e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000004bb  008001a0  008001a0  00001692  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001692  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000016c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002a0  00000000  00000000  00001704  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002c3e  00000000  00000000  000019a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b04  00000000  00000000  000045e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001b8d  00000000  00000000  000050e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000808  00000000  00000000  00006c74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007f1  00000000  00000000  0000747c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000028ef  00000000  00000000  00007c6d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000288  00000000  00000000  0000a55c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8b c3       	rjmp	.+1814   	; 0x718 <__ctors_end>
       2:	00 00       	nop
       4:	a6 c3       	rjmp	.+1868   	; 0x752 <__bad_interrupt>
       6:	00 00       	nop
       8:	a4 c3       	rjmp	.+1864   	; 0x752 <__bad_interrupt>
       a:	00 00       	nop
       c:	a2 c3       	rjmp	.+1860   	; 0x752 <__bad_interrupt>
       e:	00 00       	nop
      10:	a0 c3       	rjmp	.+1856   	; 0x752 <__bad_interrupt>
      12:	00 00       	nop
      14:	9e c3       	rjmp	.+1852   	; 0x752 <__bad_interrupt>
      16:	00 00       	nop
      18:	9c c3       	rjmp	.+1848   	; 0x752 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	9a c3       	rjmp	.+1844   	; 0x752 <__bad_interrupt>
      1e:	00 00       	nop
      20:	98 c3       	rjmp	.+1840   	; 0x752 <__bad_interrupt>
      22:	00 00       	nop
      24:	32 c5       	rjmp	.+2660   	; 0xa8a <__vector_9>
      26:	00 00       	nop
      28:	94 c3       	rjmp	.+1832   	; 0x752 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	92 c3       	rjmp	.+1828   	; 0x752 <__bad_interrupt>
      2e:	00 00       	nop
      30:	90 c3       	rjmp	.+1824   	; 0x752 <__bad_interrupt>
      32:	00 00       	nop
      34:	8e c3       	rjmp	.+1820   	; 0x752 <__bad_interrupt>
      36:	00 00       	nop
      38:	8c c3       	rjmp	.+1816   	; 0x752 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	8a c3       	rjmp	.+1812   	; 0x752 <__bad_interrupt>
      3e:	00 00       	nop
      40:	88 c3       	rjmp	.+1808   	; 0x752 <__bad_interrupt>
      42:	00 00       	nop
      44:	86 c3       	rjmp	.+1804   	; 0x752 <__bad_interrupt>
      46:	00 00       	nop
      48:	84 c3       	rjmp	.+1800   	; 0x752 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	82 c3       	rjmp	.+1796   	; 0x752 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3e c5       	rjmp	.+2684   	; 0xace <__vector_20>
      52:	00 00       	nop
      54:	7e c3       	rjmp	.+1788   	; 0x752 <__bad_interrupt>
      56:	00 00       	nop
      58:	8b c5       	rjmp	.+2838   	; 0xb70 <__vector_22>
      5a:	00 00       	nop
      5c:	7a c3       	rjmp	.+1780   	; 0x752 <__bad_interrupt>
      5e:	00 00       	nop
      60:	78 c3       	rjmp	.+1776   	; 0x752 <__bad_interrupt>
      62:	00 00       	nop
      64:	76 c3       	rjmp	.+1772   	; 0x752 <__bad_interrupt>
      66:	00 00       	nop
      68:	74 c3       	rjmp	.+1768   	; 0x752 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	72 c3       	rjmp	.+1764   	; 0x752 <__bad_interrupt>
      6e:	00 00       	nop
      70:	ce c5       	rjmp	.+2972   	; 0xc0e <__vector_28>
      72:	00 00       	nop
      74:	6e c3       	rjmp	.+1756   	; 0x752 <__bad_interrupt>
      76:	00 00       	nop
      78:	1b c6       	rjmp	.+3126   	; 0xcb0 <__vector_30>
      7a:	00 00       	nop
      7c:	6a c3       	rjmp	.+1748   	; 0x752 <__bad_interrupt>
      7e:	00 00       	nop
      80:	68 c3       	rjmp	.+1744   	; 0x752 <__bad_interrupt>
      82:	00 00       	nop
      84:	66 c3       	rjmp	.+1740   	; 0x752 <__bad_interrupt>
      86:	00 00       	nop
      88:	64 c3       	rjmp	.+1736   	; 0x752 <__bad_interrupt>
	...

0000008c <__trampolines_end>:
      8c:	00 00       	nop
      8e:	00 00       	nop
      90:	00 00       	nop
      92:	00 3e       	cpi	r16, 0xE0	; 224
      94:	45 51       	subi	r20, 0x15	; 21
      96:	45 3e       	cpi	r20, 0xE5	; 229
      98:	00 3e       	cpi	r16, 0xE0	; 224
      9a:	6b 6f       	ori	r22, 0xFB	; 251
      9c:	6b 3e       	cpi	r22, 0xEB	; 235
      9e:	00 1c       	adc	r0, r0
      a0:	3e 7c       	andi	r19, 0xCE	; 206
      a2:	3e 1c       	adc	r3, r14
      a4:	00 18       	sub	r0, r0
      a6:	3c 7e       	andi	r19, 0xEC	; 236
      a8:	3c 18       	sub	r3, r12
      aa:	00 30       	cpi	r16, 0x00	; 0
      ac:	36 7f       	andi	r19, 0xF6	; 246
      ae:	36 30       	cpi	r19, 0x06	; 6
      b0:	00 18       	sub	r0, r0
      b2:	5c 7e       	andi	r21, 0xEC	; 236
      b4:	5c 18       	sub	r5, r12
	...
      ce:	00 30       	cpi	r16, 0x00	; 0
      d0:	48 4a       	sbci	r20, 0xA8	; 168
      d2:	36 0e       	add	r3, r22
      d4:	00 06       	cpc	r0, r16
      d6:	29 79       	andi	r18, 0x99	; 153
      d8:	29 06       	cpc	r2, r25
      da:	00 00       	nop
      dc:	00 00       	nop
      de:	00 00       	nop
      e0:	00 60       	ori	r16, 0x00	; 0
      e2:	7e 0a       	sbc	r7, r30
      e4:	35 3f       	cpi	r19, 0xF5	; 245
      e6:	00 2a       	or	r0, r16
      e8:	1c 36       	cpi	r17, 0x6C	; 108
      ea:	1c 2a       	or	r1, r28
      ec:	00 00       	nop
      ee:	7f 3e       	cpi	r23, 0xEF	; 239
      f0:	1c 08       	sbc	r1, r12
      f2:	00 08       	sbc	r0, r0
      f4:	1c 3e       	cpi	r17, 0xEC	; 236
      f6:	7f 00       	.word	0x007f	; ????
      f8:	00 14       	cp	r0, r0
      fa:	36 7f       	andi	r19, 0xF6	; 246
      fc:	36 14       	cp	r3, r6
      fe:	00 00       	nop
     100:	5f 00       	.word	0x005f	; ????
     102:	5f 00       	.word	0x005f	; ????
     104:	00 06       	cpc	r0, r16
     106:	09 7f       	andi	r16, 0xF9	; 249
     108:	01 7f       	andi	r16, 0xF1	; 241
     10a:	00 22       	and	r0, r16
     10c:	4d 55       	subi	r20, 0x5D	; 93
     10e:	59 22       	and	r5, r25
     110:	00 60       	ori	r16, 0x00	; 0
     112:	60 60       	ori	r22, 0x00	; 0
     114:	60 00       	.word	0x0060	; ????
     116:	00 14       	cp	r0, r0
     118:	b6 ff       	sbrs	r27, 6
     11a:	b6 14       	cp	r11, r6
     11c:	00 04       	cpc	r0, r0
     11e:	06 7f       	andi	r16, 0xF6	; 246
     120:	06 04       	cpc	r0, r6
     122:	00 10       	cpse	r0, r0
     124:	30 7f       	andi	r19, 0xF0	; 240
     126:	30 10       	cpse	r3, r0
     128:	00 08       	sbc	r0, r0
     12a:	08 3e       	cpi	r16, 0xE8	; 232
     12c:	1c 08       	sbc	r1, r12
     12e:	00 08       	sbc	r0, r0
     130:	1c 3e       	cpi	r17, 0xEC	; 236
     132:	08 08       	sbc	r0, r8
     134:	00 78       	andi	r16, 0x80	; 128
     136:	40 40       	sbci	r20, 0x00	; 0
     138:	40 40       	sbci	r20, 0x00	; 0
     13a:	00 08       	sbc	r0, r0
     13c:	3e 08       	sbc	r3, r14
     13e:	3e 08       	sbc	r3, r14
     140:	00 30       	cpi	r16, 0x00	; 0
     142:	3c 3f       	cpi	r19, 0xFC	; 252
     144:	3c 30       	cpi	r19, 0x0C	; 12
     146:	00 03       	mulsu	r16, r16
     148:	0f 3f       	cpi	r16, 0xFF	; 255
     14a:	0f 03       	fmul	r16, r23
	...
     154:	06 5f       	subi	r16, 0xF6	; 246
     156:	06 00       	.word	0x0006	; ????
     158:	00 07       	cpc	r16, r16
     15a:	03 00       	.word	0x0003	; ????
     15c:	07 03       	mulsu	r16, r23
     15e:	00 24       	eor	r0, r0
     160:	7e 24       	eor	r7, r14
     162:	7e 24       	eor	r7, r14
     164:	00 24       	eor	r0, r0
     166:	2b 6a       	ori	r18, 0xAB	; 171
     168:	12 00       	.word	0x0012	; ????
     16a:	00 63       	ori	r16, 0x30	; 48
     16c:	13 08       	sbc	r1, r3
     16e:	64 63       	ori	r22, 0x34	; 52
     170:	00 36       	cpi	r16, 0x60	; 96
     172:	49 56       	subi	r20, 0x69	; 105
     174:	20 50       	subi	r18, 0x00	; 0
     176:	00 00       	nop
     178:	07 03       	mulsu	r16, r23
     17a:	00 00       	nop
     17c:	00 00       	nop
     17e:	3e 41       	sbci	r19, 0x1E	; 30
     180:	00 00       	nop
     182:	00 00       	nop
     184:	41 3e       	cpi	r20, 0xE1	; 225
     186:	00 00       	nop
     188:	00 08       	sbc	r0, r0
     18a:	3e 1c       	adc	r3, r14
     18c:	3e 08       	sbc	r3, r14
     18e:	00 08       	sbc	r0, r0
     190:	08 3e       	cpi	r16, 0xE8	; 232
     192:	08 08       	sbc	r0, r8
     194:	00 00       	nop
     196:	e0 60       	ori	r30, 0x00	; 0
     198:	00 00       	nop
     19a:	00 08       	sbc	r0, r0
     19c:	08 08       	sbc	r0, r8
     19e:	08 08       	sbc	r0, r8
     1a0:	00 00       	nop
     1a2:	60 60       	ori	r22, 0x00	; 0
     1a4:	00 00       	nop
     1a6:	00 20       	and	r0, r0
     1a8:	10 08       	sbc	r1, r0
     1aa:	04 02       	muls	r16, r20
     1ac:	00 3e       	cpi	r16, 0xE0	; 224
     1ae:	51 49       	sbci	r21, 0x91	; 145
     1b0:	45 3e       	cpi	r20, 0xE5	; 229
     1b2:	00 00       	nop
     1b4:	42 7f       	andi	r20, 0xF2	; 242
     1b6:	40 00       	.word	0x0040	; ????
     1b8:	00 62       	ori	r16, 0x20	; 32
     1ba:	51 49       	sbci	r21, 0x91	; 145
     1bc:	49 46       	sbci	r20, 0x69	; 105
     1be:	00 22       	and	r0, r16
     1c0:	49 49       	sbci	r20, 0x99	; 153
     1c2:	49 36       	cpi	r20, 0x69	; 105
     1c4:	00 18       	sub	r0, r0
     1c6:	14 12       	cpse	r1, r20
     1c8:	7f 10       	cpse	r7, r15
     1ca:	00 2f       	mov	r16, r16
     1cc:	49 49       	sbci	r20, 0x99	; 153
     1ce:	49 31       	cpi	r20, 0x19	; 25
     1d0:	00 3c       	cpi	r16, 0xC0	; 192
     1d2:	4a 49       	sbci	r20, 0x9A	; 154
     1d4:	49 30       	cpi	r20, 0x09	; 9
     1d6:	00 01       	movw	r0, r0
     1d8:	71 09       	sbc	r23, r1
     1da:	05 03       	mulsu	r16, r21
     1dc:	00 36       	cpi	r16, 0x60	; 96
     1de:	49 49       	sbci	r20, 0x99	; 153
     1e0:	49 36       	cpi	r20, 0x69	; 105
     1e2:	00 06       	cpc	r0, r16
     1e4:	49 49       	sbci	r20, 0x99	; 153
     1e6:	29 1e       	adc	r2, r25
     1e8:	00 00       	nop
     1ea:	6c 6c       	ori	r22, 0xCC	; 204
     1ec:	00 00       	nop
     1ee:	00 00       	nop
     1f0:	ec 6c       	ori	r30, 0xCC	; 204
     1f2:	00 00       	nop
     1f4:	00 08       	sbc	r0, r0
     1f6:	14 22       	and	r1, r20
     1f8:	41 00       	.word	0x0041	; ????
     1fa:	00 24       	eor	r0, r0
     1fc:	24 24       	eor	r2, r4
     1fe:	24 24       	eor	r2, r4
     200:	00 00       	nop
     202:	41 22       	and	r4, r17
     204:	14 08       	sbc	r1, r4
     206:	00 02       	muls	r16, r16
     208:	01 59       	subi	r16, 0x91	; 145
     20a:	09 06       	cpc	r0, r25
     20c:	00 3e       	cpi	r16, 0xE0	; 224
     20e:	41 5d       	subi	r20, 0xD1	; 209
     210:	55 1e       	adc	r5, r21
     212:	00 7e       	andi	r16, 0xE0	; 224
     214:	11 11       	cpse	r17, r1
     216:	11 7e       	andi	r17, 0xE1	; 225
     218:	00 7f       	andi	r16, 0xF0	; 240
     21a:	49 49       	sbci	r20, 0x99	; 153
     21c:	49 36       	cpi	r20, 0x69	; 105
     21e:	00 3e       	cpi	r16, 0xE0	; 224
     220:	41 41       	sbci	r20, 0x11	; 17
     222:	41 22       	and	r4, r17
     224:	00 7f       	andi	r16, 0xF0	; 240
     226:	41 41       	sbci	r20, 0x11	; 17
     228:	41 3e       	cpi	r20, 0xE1	; 225
     22a:	00 7f       	andi	r16, 0xF0	; 240
     22c:	49 49       	sbci	r20, 0x99	; 153
     22e:	49 41       	sbci	r20, 0x19	; 25
     230:	00 7f       	andi	r16, 0xF0	; 240
     232:	09 09       	sbc	r16, r9
     234:	09 01       	movw	r0, r18
     236:	00 3e       	cpi	r16, 0xE0	; 224
     238:	41 49       	sbci	r20, 0x91	; 145
     23a:	49 7a       	andi	r20, 0xA9	; 169
     23c:	00 7f       	andi	r16, 0xF0	; 240
     23e:	08 08       	sbc	r0, r8
     240:	08 7f       	andi	r16, 0xF8	; 248
     242:	00 00       	nop
     244:	41 7f       	andi	r20, 0xF1	; 241
     246:	41 00       	.word	0x0041	; ????
     248:	00 30       	cpi	r16, 0x00	; 0
     24a:	40 40       	sbci	r20, 0x00	; 0
     24c:	40 3f       	cpi	r20, 0xF0	; 240
     24e:	00 7f       	andi	r16, 0xF0	; 240
     250:	08 14       	cp	r0, r8
     252:	22 41       	sbci	r18, 0x12	; 18
     254:	00 7f       	andi	r16, 0xF0	; 240
     256:	40 40       	sbci	r20, 0x00	; 0
     258:	40 40       	sbci	r20, 0x00	; 0
     25a:	00 7f       	andi	r16, 0xF0	; 240
     25c:	02 04       	cpc	r0, r2
     25e:	02 7f       	andi	r16, 0xF2	; 242
     260:	00 7f       	andi	r16, 0xF0	; 240
     262:	02 04       	cpc	r0, r2
     264:	08 7f       	andi	r16, 0xF8	; 248
     266:	00 3e       	cpi	r16, 0xE0	; 224
     268:	41 41       	sbci	r20, 0x11	; 17
     26a:	41 3e       	cpi	r20, 0xE1	; 225
     26c:	00 7f       	andi	r16, 0xF0	; 240
     26e:	09 09       	sbc	r16, r9
     270:	09 06       	cpc	r0, r25
     272:	00 3e       	cpi	r16, 0xE0	; 224
     274:	41 51       	subi	r20, 0x11	; 17
     276:	21 5e       	subi	r18, 0xE1	; 225
     278:	00 7f       	andi	r16, 0xF0	; 240
     27a:	09 09       	sbc	r16, r9
     27c:	19 66       	ori	r17, 0x69	; 105
     27e:	00 26       	eor	r0, r16
     280:	49 49       	sbci	r20, 0x99	; 153
     282:	49 32       	cpi	r20, 0x29	; 41
     284:	00 01       	movw	r0, r0
     286:	01 7f       	andi	r16, 0xF1	; 241
     288:	01 01       	movw	r0, r2
     28a:	00 3f       	cpi	r16, 0xF0	; 240
     28c:	40 40       	sbci	r20, 0x00	; 0
     28e:	40 3f       	cpi	r20, 0xF0	; 240
     290:	00 1f       	adc	r16, r16
     292:	20 40       	sbci	r18, 0x00	; 0
     294:	20 1f       	adc	r18, r16
     296:	00 3f       	cpi	r16, 0xF0	; 240
     298:	40 3c       	cpi	r20, 0xC0	; 192
     29a:	40 3f       	cpi	r20, 0xF0	; 240
     29c:	00 63       	ori	r16, 0x30	; 48
     29e:	14 08       	sbc	r1, r4
     2a0:	14 63       	ori	r17, 0x34	; 52
     2a2:	00 07       	cpc	r16, r16
     2a4:	08 70       	andi	r16, 0x08	; 8
     2a6:	08 07       	cpc	r16, r24
     2a8:	00 71       	andi	r16, 0x10	; 16
     2aa:	49 45       	sbci	r20, 0x59	; 89
     2ac:	43 00       	.word	0x0043	; ????
     2ae:	00 00       	nop
     2b0:	7f 41       	sbci	r23, 0x1F	; 31
     2b2:	41 00       	.word	0x0041	; ????
     2b4:	00 02       	muls	r16, r16
     2b6:	04 08       	sbc	r0, r4
     2b8:	10 20       	and	r1, r0
     2ba:	00 00       	nop
     2bc:	41 41       	sbci	r20, 0x11	; 17
     2be:	7f 00       	.word	0x007f	; ????
     2c0:	00 04       	cpc	r0, r0
     2c2:	02 01       	movw	r0, r4
     2c4:	02 04       	cpc	r0, r2
     2c6:	80 80       	ld	r8, Z
     2c8:	80 80       	ld	r8, Z
     2ca:	80 80       	ld	r8, Z
     2cc:	00 00       	nop
     2ce:	03 07       	cpc	r16, r19
     2d0:	00 00       	nop
     2d2:	00 20       	and	r0, r0
     2d4:	54 54       	subi	r21, 0x44	; 68
     2d6:	54 78       	andi	r21, 0x84	; 132
     2d8:	00 7f       	andi	r16, 0xF0	; 240
     2da:	44 44       	sbci	r20, 0x44	; 68
     2dc:	44 38       	cpi	r20, 0x84	; 132
     2de:	00 38       	cpi	r16, 0x80	; 128
     2e0:	44 44       	sbci	r20, 0x44	; 68
     2e2:	44 28       	or	r4, r4
     2e4:	00 38       	cpi	r16, 0x80	; 128
     2e6:	44 44       	sbci	r20, 0x44	; 68
     2e8:	44 7f       	andi	r20, 0xF4	; 244
     2ea:	00 38       	cpi	r16, 0x80	; 128
     2ec:	54 54       	subi	r21, 0x44	; 68
     2ee:	54 08       	sbc	r5, r4
     2f0:	00 08       	sbc	r0, r0
     2f2:	7e 09       	sbc	r23, r14
     2f4:	09 00       	.word	0x0009	; ????
     2f6:	00 18       	sub	r0, r0
     2f8:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2fa:	a4 7c       	andi	r26, 0xC4	; 196
     2fc:	00 7f       	andi	r16, 0xF0	; 240
     2fe:	04 04       	cpc	r0, r4
     300:	78 00       	.word	0x0078	; ????
     302:	00 00       	nop
     304:	00 7d       	andi	r16, 0xD0	; 208
     306:	40 00       	.word	0x0040	; ????
     308:	00 40       	sbci	r16, 0x00	; 0
     30a:	80 84       	ldd	r8, Z+8	; 0x08
     30c:	7d 00       	.word	0x007d	; ????
     30e:	00 7f       	andi	r16, 0xF0	; 240
     310:	10 28       	or	r1, r0
     312:	44 00       	.word	0x0044	; ????
     314:	00 00       	nop
     316:	00 7f       	andi	r16, 0xF0	; 240
     318:	40 00       	.word	0x0040	; ????
     31a:	00 7c       	andi	r16, 0xC0	; 192
     31c:	04 18       	sub	r0, r4
     31e:	04 78       	andi	r16, 0x84	; 132
     320:	00 7c       	andi	r16, 0xC0	; 192
     322:	04 04       	cpc	r0, r4
     324:	78 00       	.word	0x0078	; ????
     326:	00 38       	cpi	r16, 0x80	; 128
     328:	44 44       	sbci	r20, 0x44	; 68
     32a:	44 38       	cpi	r20, 0x84	; 132
     32c:	00 fc       	sbrc	r0, 0
     32e:	44 44       	sbci	r20, 0x44	; 68
     330:	44 38       	cpi	r20, 0x84	; 132
     332:	00 38       	cpi	r16, 0x80	; 128
     334:	44 44       	sbci	r20, 0x44	; 68
     336:	44 fc       	sbrc	r4, 4
     338:	00 44       	sbci	r16, 0x40	; 64
     33a:	78 44       	sbci	r23, 0x48	; 72
     33c:	04 08       	sbc	r0, r4
     33e:	00 08       	sbc	r0, r0
     340:	54 54       	subi	r21, 0x44	; 68
     342:	54 20       	and	r5, r4
     344:	00 04       	cpc	r0, r0
     346:	3e 44       	sbci	r19, 0x4E	; 78
     348:	24 00       	.word	0x0024	; ????
     34a:	00 3c       	cpi	r16, 0xC0	; 192
     34c:	40 20       	and	r4, r0
     34e:	7c 00       	.word	0x007c	; ????
     350:	00 1c       	adc	r0, r0
     352:	20 40       	sbci	r18, 0x00	; 0
     354:	20 1c       	adc	r2, r0
     356:	00 3c       	cpi	r16, 0xC0	; 192
     358:	60 30       	cpi	r22, 0x00	; 0
     35a:	60 3c       	cpi	r22, 0xC0	; 192
     35c:	00 6c       	ori	r16, 0xC0	; 192
     35e:	10 10       	cpse	r1, r0
     360:	6c 00       	.word	0x006c	; ????
     362:	00 9c       	mul	r0, r0
     364:	a0 60       	ori	r26, 0x00	; 0
     366:	3c 00       	.word	0x003c	; ????
     368:	00 64       	ori	r16, 0x40	; 64
     36a:	54 54       	subi	r21, 0x44	; 68
     36c:	4c 00       	.word	0x004c	; ????
     36e:	00 08       	sbc	r0, r0
     370:	3e 41       	sbci	r19, 0x1E	; 30
     372:	41 00       	.word	0x0041	; ????
     374:	00 00       	nop
     376:	00 77       	andi	r16, 0x70	; 112
     378:	00 00       	nop
     37a:	00 00       	nop
     37c:	41 41       	sbci	r20, 0x11	; 17
     37e:	3e 08       	sbc	r3, r14
     380:	00 02       	muls	r16, r16
     382:	01 02       	muls	r16, r17
     384:	01 00       	.word	0x0001	; ????
     386:	00 3c       	cpi	r16, 0xC0	; 192
     388:	26 23       	and	r18, r22
     38a:	26 3c       	cpi	r18, 0xC6	; 198
     38c:	00 1e       	adc	r0, r16
     38e:	a1 e1       	ldi	r26, 0x11	; 17
     390:	21 12       	cpse	r2, r17
     392:	00 3d       	cpi	r16, 0xD0	; 208
     394:	40 20       	and	r4, r0
     396:	7d 00       	.word	0x007d	; ????
     398:	00 38       	cpi	r16, 0x80	; 128
     39a:	54 54       	subi	r21, 0x44	; 68
     39c:	55 09       	sbc	r21, r5
     39e:	00 20       	and	r0, r0
     3a0:	55 55       	subi	r21, 0x55	; 85
     3a2:	55 78       	andi	r21, 0x85	; 133
     3a4:	00 20       	and	r0, r0
     3a6:	55 54       	subi	r21, 0x45	; 69
     3a8:	55 78       	andi	r21, 0x85	; 133
     3aa:	00 20       	and	r0, r0
     3ac:	55 55       	subi	r21, 0x55	; 85
     3ae:	54 78       	andi	r21, 0x84	; 132
     3b0:	00 20       	and	r0, r0
     3b2:	57 55       	subi	r21, 0x57	; 87
     3b4:	57 78       	andi	r21, 0x87	; 135
     3b6:	00 1c       	adc	r0, r0
     3b8:	a2 e2       	ldi	r26, 0x22	; 34
     3ba:	22 14       	cp	r2, r2
     3bc:	00 38       	cpi	r16, 0x80	; 128
     3be:	55 55       	subi	r21, 0x55	; 85
     3c0:	55 08       	sbc	r5, r5
     3c2:	00 38       	cpi	r16, 0x80	; 128
     3c4:	55 54       	subi	r21, 0x45	; 69
     3c6:	55 08       	sbc	r5, r5
     3c8:	00 38       	cpi	r16, 0x80	; 128
     3ca:	55 55       	subi	r21, 0x55	; 85
     3cc:	54 08       	sbc	r5, r4
     3ce:	00 00       	nop
     3d0:	01 7c       	andi	r16, 0xC1	; 193
     3d2:	41 00       	.word	0x0041	; ????
     3d4:	00 00       	nop
     3d6:	01 7d       	andi	r16, 0xD1	; 209
     3d8:	41 00       	.word	0x0041	; ????
     3da:	00 00       	nop
     3dc:	01 7c       	andi	r16, 0xC1	; 193
     3de:	40 00       	.word	0x0040	; ????
     3e0:	00 70       	andi	r16, 0x00	; 0
     3e2:	29 24       	eor	r2, r9
     3e4:	29 70       	andi	r18, 0x09	; 9
     3e6:	00 78       	andi	r16, 0x80	; 128
     3e8:	2f 25       	eor	r18, r15
     3ea:	2f 78       	andi	r18, 0x8F	; 143
     3ec:	00 7c       	andi	r16, 0xC0	; 192
     3ee:	54 54       	subi	r21, 0x44	; 68
     3f0:	55 45       	sbci	r21, 0x55	; 85
     3f2:	00 34       	cpi	r16, 0x40	; 64
     3f4:	54 7c       	andi	r21, 0xC4	; 196
     3f6:	54 58       	subi	r21, 0x84	; 132
     3f8:	00 7e       	andi	r16, 0xE0	; 224
     3fa:	09 7f       	andi	r16, 0xF9	; 249
     3fc:	49 49       	sbci	r20, 0x99	; 153
     3fe:	00 38       	cpi	r16, 0x80	; 128
     400:	45 45       	sbci	r20, 0x55	; 85
     402:	39 00       	.word	0x0039	; ????
     404:	00 38       	cpi	r16, 0x80	; 128
     406:	45 44       	sbci	r20, 0x45	; 69
     408:	39 00       	.word	0x0039	; ????
     40a:	00 39       	cpi	r16, 0x90	; 144
     40c:	45 44       	sbci	r20, 0x45	; 69
     40e:	38 00       	.word	0x0038	; ????
     410:	00 3c       	cpi	r16, 0xC0	; 192
     412:	41 21       	and	r20, r1
     414:	7d 00       	.word	0x007d	; ????
     416:	00 3d       	cpi	r16, 0xD0	; 208
     418:	41 20       	and	r4, r1
     41a:	7c 00       	.word	0x007c	; ????
     41c:	00 9c       	mul	r0, r0
     41e:	a1 60       	ori	r26, 0x01	; 1
     420:	3d 00       	.word	0x003d	; ????
     422:	00 3d       	cpi	r16, 0xD0	; 208
     424:	42 42       	sbci	r20, 0x22	; 34
     426:	3d 00       	.word	0x003d	; ????
     428:	00 3c       	cpi	r16, 0xC0	; 192
     42a:	41 40       	sbci	r20, 0x01	; 1
     42c:	3d 00       	.word	0x003d	; ????
     42e:	80 70       	andi	r24, 0x00	; 0
     430:	68 58       	subi	r22, 0x88	; 136
     432:	38 04       	cpc	r3, r8
     434:	00 48       	sbci	r16, 0x80	; 128
     436:	3e 49       	sbci	r19, 0x9E	; 158
     438:	49 62       	ori	r20, 0x29	; 41
     43a:	00 7e       	andi	r16, 0xE0	; 224
     43c:	61 5d       	subi	r22, 0xD1	; 209
     43e:	43 3f       	cpi	r20, 0xF3	; 243
     440:	00 22       	and	r0, r16
     442:	14 08       	sbc	r1, r4
     444:	14 22       	and	r1, r20
     446:	00 40       	sbci	r16, 0x00	; 0
     448:	88 7e       	andi	r24, 0xE8	; 232
     44a:	09 02       	muls	r16, r25
     44c:	00 20       	and	r0, r0
     44e:	54 55       	subi	r21, 0x54	; 84
     450:	55 78       	andi	r21, 0x85	; 133
     452:	00 00       	nop
     454:	00 7d       	andi	r16, 0xD0	; 208
     456:	41 00       	.word	0x0041	; ????
     458:	00 38       	cpi	r16, 0x80	; 128
     45a:	44 45       	sbci	r20, 0x54	; 84
     45c:	39 00       	.word	0x0039	; ????
     45e:	00 3c       	cpi	r16, 0xC0	; 192
     460:	40 21       	and	r20, r0
     462:	7d 00       	.word	0x007d	; ????
     464:	00 7a       	andi	r16, 0xA0	; 160
     466:	09 0a       	sbc	r0, r25
     468:	71 00       	.word	0x0071	; ????
     46a:	00 7a       	andi	r16, 0xA0	; 160
     46c:	11 22       	and	r1, r17
     46e:	79 00       	.word	0x0079	; ????
     470:	00 08       	sbc	r0, r0
     472:	55 55       	subi	r21, 0x55	; 85
     474:	55 5e       	subi	r21, 0xE5	; 229
     476:	00 4e       	sbci	r16, 0xE0	; 224
     478:	51 51       	subi	r21, 0x11	; 17
     47a:	4e 00       	.word	0x004e	; ????
     47c:	00 30       	cpi	r16, 0x00	; 0
     47e:	48 4d       	sbci	r20, 0xD8	; 216
     480:	40 20       	and	r4, r0
     482:	3e 41       	sbci	r19, 0x1E	; 30
     484:	5d 4b       	sbci	r21, 0xBD	; 189
     486:	55 3e       	cpi	r21, 0xE5	; 229
     488:	04 04       	cpc	r0, r4
     48a:	04 04       	cpc	r0, r4
     48c:	04 1c       	adc	r0, r4
     48e:	00 17       	cp	r16, r16
     490:	08 4c       	sbci	r16, 0xC8	; 200
     492:	6a 50       	subi	r22, 0x0A	; 10
     494:	00 17       	cp	r16, r16
     496:	08 34       	cpi	r16, 0x48	; 72
     498:	2a 78       	andi	r18, 0x8A	; 138
     49a:	00 00       	nop
     49c:	30 7d       	andi	r19, 0xD0	; 208
     49e:	30 00       	.word	0x0030	; ????
     4a0:	00 08       	sbc	r0, r0
     4a2:	14 00       	.word	0x0014	; ????
     4a4:	08 14       	cp	r0, r8
     4a6:	00 14       	cp	r0, r0
     4a8:	08 00       	.word	0x0008	; ????
     4aa:	14 08       	sbc	r1, r4
     4ac:	44 11       	cpse	r20, r4
     4ae:	44 11       	cpse	r20, r4
     4b0:	44 11       	cpse	r20, r4
     4b2:	aa 55       	subi	r26, 0x5A	; 90
     4b4:	aa 55       	subi	r26, 0x5A	; 90
     4b6:	aa 55       	subi	r26, 0x5A	; 90
     4b8:	bb ee       	ldi	r27, 0xEB	; 235
     4ba:	bb ee       	ldi	r27, 0xEB	; 235
     4bc:	bb ee       	ldi	r27, 0xEB	; 235
     4be:	00 00       	nop
     4c0:	00 ff       	sbrs	r16, 0
     4c2:	00 00       	nop
     4c4:	08 08       	sbc	r0, r8
     4c6:	08 ff       	.word	0xff08	; ????
     4c8:	00 00       	nop
     4ca:	00 70       	andi	r16, 0x00	; 0
     4cc:	28 25       	eor	r18, r8
     4ce:	29 70       	andi	r18, 0x09	; 9
     4d0:	00 70       	andi	r16, 0x00	; 0
     4d2:	29 25       	eor	r18, r9
     4d4:	29 70       	andi	r18, 0x09	; 9
     4d6:	00 70       	andi	r16, 0x00	; 0
     4d8:	29 25       	eor	r18, r9
     4da:	28 70       	andi	r18, 0x08	; 8
     4dc:	3e 41       	sbci	r19, 0x1E	; 30
     4de:	5d 55       	subi	r21, 0x5D	; 93
     4e0:	41 3e       	cpi	r20, 0xE1	; 225
     4e2:	0a fb       	.word	0xfb0a	; ????
     4e4:	00 ff       	sbrs	r16, 0
     4e6:	00 00       	nop
     4e8:	00 ff       	sbrs	r16, 0
     4ea:	00 ff       	sbrs	r16, 0
     4ec:	00 00       	nop
     4ee:	0a fa       	.word	0xfa0a	; ????
     4f0:	02 fe       	sbrs	r0, 2
     4f2:	00 00       	nop
     4f4:	0a 0b       	sbc	r16, r26
     4f6:	08 0f       	add	r16, r24
     4f8:	00 00       	nop
     4fa:	00 18       	sub	r0, r0
     4fc:	24 66       	ori	r18, 0x64	; 100
     4fe:	24 00       	.word	0x0024	; ????
     500:	00 29       	or	r16, r0
     502:	2a 7c       	andi	r18, 0xCA	; 202
     504:	2a 29       	or	r18, r10
     506:	08 08       	sbc	r0, r8
     508:	08 f8       	.word	0xf808	; ????
     50a:	00 00       	nop
     50c:	00 00       	nop
     50e:	00 0f       	add	r16, r16
     510:	08 08       	sbc	r0, r8
     512:	08 08       	sbc	r0, r8
     514:	08 0f       	add	r16, r24
     516:	08 08       	sbc	r0, r8
     518:	08 08       	sbc	r0, r8
     51a:	08 f8       	.word	0xf808	; ????
     51c:	08 08       	sbc	r0, r8
     51e:	00 00       	nop
     520:	00 ff       	sbrs	r16, 0
     522:	08 08       	sbc	r0, r8
     524:	08 08       	sbc	r0, r8
     526:	08 08       	sbc	r0, r8
     528:	08 08       	sbc	r0, r8
     52a:	08 08       	sbc	r0, r8
     52c:	08 ff       	.word	0xff08	; ????
     52e:	08 08       	sbc	r0, r8
     530:	00 20       	and	r0, r0
     532:	56 55       	subi	r21, 0x56	; 86
     534:	56 79       	andi	r21, 0x96	; 150
     536:	00 70       	andi	r16, 0x00	; 0
     538:	2a 25       	eor	r18, r10
     53a:	2a 71       	andi	r18, 0x1A	; 26
     53c:	00 0f       	add	r16, r16
     53e:	08 0b       	sbc	r16, r24
     540:	0a 0a       	sbc	r0, r26
     542:	00 fe       	sbrs	r0, 0
     544:	02 fa       	bst	r0, 2
     546:	0a 0a       	sbc	r0, r26
     548:	0a 0b       	sbc	r16, r26
     54a:	08 0b       	sbc	r16, r24
     54c:	0a 0a       	sbc	r0, r26
     54e:	0a fa       	.word	0xfa0a	; ????
     550:	02 fa       	bst	r0, 2
     552:	0a 0a       	sbc	r0, r26
     554:	00 ff       	sbrs	r16, 0
     556:	00 fb       	bst	r16, 0
     558:	0a 0a       	sbc	r0, r26
     55a:	0a 0a       	sbc	r0, r26
     55c:	0a 0a       	sbc	r0, r26
     55e:	0a 0a       	sbc	r0, r26
     560:	0a fb       	.word	0xfb0a	; ????
     562:	00 fb       	bst	r16, 0
     564:	0a 0a       	sbc	r0, r26
     566:	00 5d       	subi	r16, 0xD0	; 208
     568:	22 22       	and	r2, r18
     56a:	22 5d       	subi	r18, 0xD2	; 210
     56c:	00 22       	and	r0, r16
     56e:	55 59       	subi	r21, 0x95	; 149
     570:	30 00       	.word	0x0030	; ????
     572:	00 08       	sbc	r0, r0
     574:	7f 49       	sbci	r23, 0x9F	; 159
     576:	41 3e       	cpi	r20, 0xE1	; 225
     578:	00 7c       	andi	r16, 0xC0	; 192
     57a:	55 55       	subi	r21, 0x55	; 85
     57c:	55 44       	sbci	r21, 0x45	; 69
     57e:	00 7c       	andi	r16, 0xC0	; 192
     580:	55 54       	subi	r21, 0x45	; 69
     582:	55 44       	sbci	r21, 0x45	; 69
     584:	00 7c       	andi	r16, 0xC0	; 192
     586:	55 55       	subi	r21, 0x55	; 85
     588:	54 44       	sbci	r21, 0x44	; 68
     58a:	00 00       	nop
     58c:	00 07       	cpc	r16, r16
     58e:	00 00       	nop
     590:	00 00       	nop
     592:	44 7d       	andi	r20, 0xD4	; 212
     594:	45 00       	.word	0x0045	; ????
     596:	00 00       	nop
     598:	45 7d       	andi	r20, 0xD5	; 213
     59a:	45 00       	.word	0x0045	; ????
     59c:	00 00       	nop
     59e:	45 7c       	andi	r20, 0xC5	; 197
     5a0:	45 00       	.word	0x0045	; ????
     5a2:	08 08       	sbc	r0, r8
     5a4:	08 0f       	add	r16, r24
     5a6:	00 00       	nop
     5a8:	00 00       	nop
     5aa:	00 f8       	bld	r0, 0
     5ac:	08 08       	sbc	r0, r8
     5ae:	ff ff       	.word	0xffff	; ????
     5b0:	ff ff       	.word	0xffff	; ????
     5b2:	ff ff       	.word	0xffff	; ????
     5b4:	f0 f0       	brcs	.+60     	; 0x5f2 <__FUSE_REGION_LENGTH__+0x1f2>
     5b6:	f0 f0       	brcs	.+60     	; 0x5f4 <__FUSE_REGION_LENGTH__+0x1f4>
     5b8:	f0 f0       	brcs	.+60     	; 0x5f6 <__FUSE_REGION_LENGTH__+0x1f6>
     5ba:	00 00       	nop
     5bc:	00 77       	andi	r16, 0x70	; 112
     5be:	00 00       	nop
     5c0:	00 00       	nop
     5c2:	45 7d       	andi	r20, 0xD5	; 213
     5c4:	44 00       	.word	0x0044	; ????
     5c6:	0f 0f       	add	r16, r31
     5c8:	0f 0f       	add	r16, r31
     5ca:	0f 0f       	add	r16, r31
     5cc:	00 3c       	cpi	r16, 0xC0	; 192
     5ce:	42 43       	sbci	r20, 0x32	; 50
     5d0:	3d 00       	.word	0x003d	; ????
     5d2:	00 fe       	sbrs	r0, 0
     5d4:	4a 4a       	sbci	r20, 0xAA	; 170
     5d6:	34 00       	.word	0x0034	; ????
     5d8:	00 3c       	cpi	r16, 0xC0	; 192
     5da:	43 43       	sbci	r20, 0x33	; 51
     5dc:	3d 00       	.word	0x003d	; ????
     5de:	00 3d       	cpi	r16, 0xD0	; 208
     5e0:	43 42       	sbci	r20, 0x23	; 35
     5e2:	3c 00       	.word	0x003c	; ????
     5e4:	00 32       	cpi	r16, 0x20	; 32
     5e6:	49 4a       	sbci	r20, 0xA9	; 169
     5e8:	31 00       	.word	0x0031	; ????
     5ea:	00 3a       	cpi	r16, 0xA0	; 160
     5ec:	45 46       	sbci	r20, 0x65	; 101
     5ee:	39 00       	.word	0x0039	; ????
     5f0:	00 fc       	sbrc	r0, 0
     5f2:	20 20       	and	r2, r0
     5f4:	1c 00       	.word	0x001c	; ????
     5f6:	00 fe       	sbrs	r0, 0
     5f8:	aa 28       	or	r10, r10
     5fa:	10 00       	.word	0x0010	; ????
     5fc:	00 ff       	sbrs	r16, 0
     5fe:	a5 24       	eor	r10, r5
     600:	18 00       	.word	0x0018	; ????
     602:	00 3c       	cpi	r16, 0xC0	; 192
     604:	40 41       	sbci	r20, 0x10	; 16
     606:	3d 00       	.word	0x003d	; ????
     608:	00 3c       	cpi	r16, 0xC0	; 192
     60a:	41 41       	sbci	r20, 0x11	; 17
     60c:	3d 00       	.word	0x003d	; ????
     60e:	00 3d       	cpi	r16, 0xD0	; 208
     610:	41 40       	sbci	r20, 0x01	; 1
     612:	3c 00       	.word	0x003c	; ????
     614:	00 9c       	mul	r0, r0
     616:	a0 61       	ori	r26, 0x10	; 16
     618:	3d 00       	.word	0x003d	; ????
     61a:	00 04       	cpc	r0, r0
     61c:	08 71       	andi	r16, 0x18	; 24
     61e:	09 04       	cpc	r0, r9
     620:	00 00       	nop
     622:	02 02       	muls	r16, r18
     624:	02 00       	.word	0x0002	; ????
     626:	00 00       	nop
     628:	07 03       	mulsu	r16, r23
     62a:	00 00       	nop
     62c:	00 00       	nop
     62e:	08 08       	sbc	r0, r8
     630:	08 00       	.word	0x0008	; ????
     632:	00 00       	nop
     634:	24 2e       	mov	r2, r20
     636:	24 00       	.word	0x0024	; ????
     638:	00 24       	eor	r0, r0
     63a:	24 24       	eor	r2, r4
     63c:	24 24       	eor	r2, r4
     63e:	05 17       	cp	r16, r21
     640:	0a 34       	cpi	r16, 0x4A	; 74
     642:	2a 78       	andi	r18, 0x8A	; 138
     644:	00 06       	cpc	r0, r16
     646:	09 7f       	andi	r16, 0xF9	; 249
     648:	01 7f       	andi	r16, 0xF1	; 241
     64a:	00 22       	and	r0, r16
     64c:	4d 55       	subi	r20, 0x5D	; 93
     64e:	59 22       	and	r5, r25
     650:	00 08       	sbc	r0, r0
     652:	08 2a       	or	r0, r24
     654:	08 08       	sbc	r0, r8
     656:	00 00       	nop
     658:	08 18       	sub	r0, r8
     65a:	18 00       	.word	0x0018	; ????
     65c:	00 06       	cpc	r0, r16
     65e:	09 09       	sbc	r16, r9
     660:	06 00       	.word	0x0006	; ????
     662:	00 00       	nop
     664:	08 00       	.word	0x0008	; ????
     666:	08 00       	.word	0x0008	; ????
     668:	00 00       	nop
     66a:	08 00       	.word	0x0008	; ????
     66c:	00 00       	nop
     66e:	00 02       	muls	r16, r16
     670:	0f 00       	.word	0x000f	; ????
     672:	00 00       	nop
     674:	00 09       	sbc	r16, r0
     676:	0f 05       	cpc	r16, r15
     678:	00 00       	nop
     67a:	00 09       	sbc	r16, r0
     67c:	0d 0a       	sbc	r0, r29
     67e:	00 00       	nop
     680:	00 3c       	cpi	r16, 0xC0	; 192
     682:	3c 3c       	cpi	r19, 0xCC	; 204
     684:	3c 00       	.word	0x003c	; ????
     686:	00 00       	nop
     688:	00 00       	nop
	...

0000068c <__c.2156>:
     68c:	20 20 20 20 20 20 4b 48 7a 00                             KHz.

00000696 <__c.2154>:
     696:	54 68 65 20 46 72 65 71 75 65 6e 63 65 20 69 73     The Frequence is
     6a6:	74 20 20 20 0d 0a 0a 00                             t   ....

000006ae <__c.2117>:
     6ae:	74 68 65 20 66 72 65 71 75 65 6e 63 65 0d 0a 00     the frequence...

000006be <__c.2115>:
     6be:	77 61 69 74 69 6e 67 20 66 6f 72 0d 0a 20 00        waiting for.. .

000006cd <__c.2097>:
     6cd:	4c 69 20 58 75 65 6a 69 6e 67 0d 0a 00              Li Xuejing...

000006da <__c.2095>:
     6da:	57 61 6e 67 20 53 68 69 68 61 6e 67 0d 0a 00        Wang Shihang...

000006e9 <__c.2093>:
     6e9:	4d 65 6d 62 65 72 73 3a 0d 0a 00                    Members:...

000006f4 <__c.2091>:
     6f4:	44 44 53 2d 53 69 67 6e 61 6c 67 65 6e 65 72 61     DDS-Signalgenera
     704:	74 6f 72 0d 0a 00                                   tor...

0000070a <__c.2089>:
     70a:	50 72 6f 6a 65 63 74 20 30 34 3a 0d 0a 00           Project 04:...

00000718 <__ctors_end>:
     718:	11 24       	eor	r1, r1
     71a:	1f be       	out	0x3f, r1	; 63
     71c:	cf ef       	ldi	r28, 0xFF	; 255
     71e:	d0 e4       	ldi	r29, 0x40	; 64
     720:	de bf       	out	0x3e, r29	; 62
     722:	cd bf       	out	0x3d, r28	; 61

00000724 <__do_copy_data>:
     724:	11 e0       	ldi	r17, 0x01	; 1
     726:	a0 e0       	ldi	r26, 0x00	; 0
     728:	b1 e0       	ldi	r27, 0x01	; 1
     72a:	ee e5       	ldi	r30, 0x5E	; 94
     72c:	f5 e1       	ldi	r31, 0x15	; 21
     72e:	00 e0       	ldi	r16, 0x00	; 0
     730:	0b bf       	out	0x3b, r16	; 59
     732:	02 c0       	rjmp	.+4      	; 0x738 <__do_copy_data+0x14>
     734:	07 90       	elpm	r0, Z+
     736:	0d 92       	st	X+, r0
     738:	a0 3a       	cpi	r26, 0xA0	; 160
     73a:	b1 07       	cpc	r27, r17
     73c:	d9 f7       	brne	.-10     	; 0x734 <__do_copy_data+0x10>

0000073e <__do_clear_bss>:
     73e:	26 e0       	ldi	r18, 0x06	; 6
     740:	a0 ea       	ldi	r26, 0xA0	; 160
     742:	b1 e0       	ldi	r27, 0x01	; 1
     744:	01 c0       	rjmp	.+2      	; 0x748 <.do_clear_bss_start>

00000746 <.do_clear_bss_loop>:
     746:	1d 92       	st	X+, r1

00000748 <.do_clear_bss_start>:
     748:	ab 35       	cpi	r26, 0x5B	; 91
     74a:	b2 07       	cpc	r27, r18
     74c:	e1 f7       	brne	.-8      	; 0x746 <.do_clear_bss_loop>
     74e:	92 d4       	rcall	.+2340   	; 0x1074 <main>
     750:	04 c7       	rjmp	.+3592   	; 0x155a <_exit>

00000752 <__bad_interrupt>:
     752:	56 cc       	rjmp	.-1876   	; 0x0 <__vectors>

00000754 <dataflash_init>:
void
dataflash_init (void)
{
  // AT45DB081 doesn't actually need an intialization,
  // only the ChipSelect should be configured as an output.
  DDRB |= (1 << PB4);
     754:	24 9a       	sbi	0x04, 4	; 4
  DATAFLASH_Chip_Unselect;
     756:	2c 9a       	sbi	0x05, 4	; 5
  SPI_MasterInit();
     758:	11 c1       	rjmp	.+546    	; 0x97c <SPI_MasterInit>
     75a:	08 95       	ret

0000075c <LCD_Update>:
  unsigned char x;
  
  for (x = 0; x < 128; x++)
    lcd_framebuffer[line][x] = 0x00;
  
  lcd_frameupdate |= (1 << line);
     75c:	bf 92       	push	r11
     75e:	cf 92       	push	r12
     760:	df 92       	push	r13
     762:	ef 92       	push	r14
     764:	ff 92       	push	r15
     766:	0f 93       	push	r16
     768:	1f 93       	push	r17
     76a:	cf 93       	push	r28
     76c:	df 93       	push	r29
     76e:	bf b6       	in	r11, 0x3f	; 63
     770:	f8 94       	cli
     772:	03 eb       	ldi	r16, 0xB3	; 179
     774:	15 e0       	ldi	r17, 0x05	; 5
     776:	0f 2e       	mov	r0, r31
     778:	f3 eb       	ldi	r31, 0xB3	; 179
     77a:	cf 2e       	mov	r12, r31
     77c:	f1 e0       	ldi	r31, 0x01	; 1
     77e:	df 2e       	mov	r13, r31
     780:	f0 2d       	mov	r31, r0
     782:	0f 2e       	mov	r0, r31
     784:	f7 e0       	ldi	r31, 0x07	; 7
     786:	ef 2e       	mov	r14, r31
     788:	f1 2c       	mov	r15, r1
     78a:	f0 2d       	mov	r31, r0
     78c:	80 91 a2 01 	lds	r24, 0x01A2
     790:	90 e0       	ldi	r25, 0x00	; 0
     792:	0e 2c       	mov	r0, r14
     794:	02 c0       	rjmp	.+4      	; 0x79a <LCD_Update+0x3e>
     796:	95 95       	asr	r25
     798:	87 95       	ror	r24
     79a:	0a 94       	dec	r0
     79c:	e2 f7       	brpl	.-8      	; 0x796 <LCD_Update+0x3a>
     79e:	80 ff       	sbrs	r24, 0
     7a0:	13 c0       	rjmp	.+38     	; 0x7c8 <LCD_Update+0x6c>
     7a2:	46 98       	cbi	0x08, 6	; 8
     7a4:	47 98       	cbi	0x08, 7	; 8
     7a6:	8e 2d       	mov	r24, r14
     7a8:	80 6b       	ori	r24, 0xB0	; 176
     7aa:	fa d0       	rcall	.+500    	; 0x9a0 <SPI_MasterTransfer>
     7ac:	80 e1       	ldi	r24, 0x10	; 16
     7ae:	f8 d0       	rcall	.+496    	; 0x9a0 <SPI_MasterTransfer>
     7b0:	80 e0       	ldi	r24, 0x00	; 0
     7b2:	f6 d0       	rcall	.+492    	; 0x9a0 <SPI_MasterTransfer>
     7b4:	47 9a       	sbi	0x08, 7	; 8
     7b6:	e8 01       	movw	r28, r16
     7b8:	c0 58       	subi	r28, 0x80	; 128
     7ba:	d1 09       	sbc	r29, r1
     7bc:	89 91       	ld	r24, Y+
     7be:	f0 d0       	rcall	.+480    	; 0x9a0 <SPI_MasterTransfer>
     7c0:	c0 17       	cp	r28, r16
     7c2:	d1 07       	cpc	r29, r17
     7c4:	d9 f7       	brne	.-10     	; 0x7bc <LCD_Update+0x60>
     7c6:	46 9a       	sbi	0x08, 6	; 8
     7c8:	81 e0       	ldi	r24, 0x01	; 1
     7ca:	e8 1a       	sub	r14, r24
     7cc:	f1 08       	sbc	r15, r1
     7ce:	00 58       	subi	r16, 0x80	; 128
     7d0:	11 09       	sbc	r17, r1
     7d2:	0c 15       	cp	r16, r12
     7d4:	1d 05       	cpc	r17, r13
     7d6:	d1 f6       	brne	.-76     	; 0x78c <LCD_Update+0x30>
     7d8:	10 92 a2 01 	sts	0x01A2, r1
     7dc:	bf be       	out	0x3f, r11	; 63
     7de:	df 91       	pop	r29
     7e0:	cf 91       	pop	r28
     7e2:	1f 91       	pop	r17
     7e4:	0f 91       	pop	r16
     7e6:	ff 90       	pop	r15
     7e8:	ef 90       	pop	r14
     7ea:	df 90       	pop	r13
     7ec:	cf 90       	pop	r12
     7ee:	bf 90       	pop	r11
     7f0:	08 95       	ret

000007f2 <LCD_Clear>:
     7f2:	e3 eb       	ldi	r30, 0xB3	; 179
     7f4:	f1 e0       	ldi	r31, 0x01	; 1
     7f6:	23 eb       	ldi	r18, 0xB3	; 179
     7f8:	35 e0       	ldi	r19, 0x05	; 5
     7fa:	08 c0       	rjmp	.+16     	; 0x80c <LCD_Clear+0x1a>
     7fc:	11 92       	st	Z+, r1
     7fe:	e8 17       	cp	r30, r24
     800:	f9 07       	cpc	r31, r25
     802:	e1 f7       	brne	.-8      	; 0x7fc <LCD_Clear+0xa>
     804:	fc 01       	movw	r30, r24
     806:	82 17       	cp	r24, r18
     808:	93 07       	cpc	r25, r19
     80a:	21 f0       	breq	.+8      	; 0x814 <LCD_Clear+0x22>
     80c:	cf 01       	movw	r24, r30
     80e:	80 58       	subi	r24, 0x80	; 128
     810:	9f 4f       	sbci	r25, 0xFF	; 255
     812:	f4 cf       	rjmp	.-24     	; 0x7fc <LCD_Clear+0xa>
     814:	8f ef       	ldi	r24, 0xFF	; 255
     816:	80 93 a2 01 	sts	0x01A2, r24
     81a:	a0 cf       	rjmp	.-192    	; 0x75c <LCD_Update>
     81c:	08 95       	ret

0000081e <LCD_PutChar>:
     81e:	8a 30       	cpi	r24, 0x0A	; 10
     820:	29 f0       	breq	.+10     	; 0x82c <LCD_PutChar+0xe>
     822:	8d 30       	cpi	r24, 0x0D	; 13
     824:	61 f4       	brne	.+24     	; 0x83e <LCD_PutChar+0x20>
     826:	10 92 a1 01 	sts	0x01A1, r1
     82a:	08 95       	ret
     82c:	80 91 a0 01 	lds	r24, 0x01A0
     830:	87 30       	cpi	r24, 0x07	; 7
     832:	08 f0       	brcs	.+2      	; 0x836 <LCD_PutChar+0x18>
     834:	3d c0       	rjmp	.+122    	; 0x8b0 <LCD_PutChar+0x92>
     836:	8f 5f       	subi	r24, 0xFF	; 255
     838:	80 93 a0 01 	sts	0x01A0, r24
     83c:	08 95       	ret
     83e:	90 e0       	ldi	r25, 0x00	; 0
     840:	fc 01       	movw	r30, r24
     842:	ee 0f       	add	r30, r30
     844:	ff 1f       	adc	r31, r31
     846:	e8 0f       	add	r30, r24
     848:	f9 1f       	adc	r31, r25
     84a:	ee 0f       	add	r30, r30
     84c:	ff 1f       	adc	r31, r31
     84e:	e4 57       	subi	r30, 0x74	; 116
     850:	ff 4f       	sbci	r31, 0xFF	; 255
     852:	80 91 a1 01 	lds	r24, 0x01A1
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	dc 01       	movw	r26, r24
     85a:	aa 0f       	add	r26, r26
     85c:	bb 1f       	adc	r27, r27
     85e:	a8 0f       	add	r26, r24
     860:	b9 1f       	adc	r27, r25
     862:	aa 0f       	add	r26, r26
     864:	bb 1f       	adc	r27, r27
     866:	80 91 a0 01 	lds	r24, 0x01A0
     86a:	90 e8       	ldi	r25, 0x80	; 128
     86c:	89 9f       	mul	r24, r25
     86e:	a0 0d       	add	r26, r0
     870:	b1 1d       	adc	r27, r1
     872:	11 24       	eor	r1, r1
     874:	ad 54       	subi	r26, 0x4D	; 77
     876:	be 4f       	sbci	r27, 0xFE	; 254
     878:	80 e0       	ldi	r24, 0x00	; 0
     87a:	94 91       	lpm	r25, Z
     87c:	9d 93       	st	X+, r25
     87e:	8f 5f       	subi	r24, 0xFF	; 255
     880:	31 96       	adiw	r30, 0x01	; 1
     882:	86 30       	cpi	r24, 0x06	; 6
     884:	d1 f7       	brne	.-12     	; 0x87a <LCD_PutChar+0x5c>
     886:	81 e0       	ldi	r24, 0x01	; 1
     888:	90 e0       	ldi	r25, 0x00	; 0
     88a:	00 90 a0 01 	lds	r0, 0x01A0
     88e:	02 c0       	rjmp	.+4      	; 0x894 <LCD_PutChar+0x76>
     890:	88 0f       	add	r24, r24
     892:	99 1f       	adc	r25, r25
     894:	0a 94       	dec	r0
     896:	e2 f7       	brpl	.-8      	; 0x890 <LCD_PutChar+0x72>
     898:	90 91 a2 01 	lds	r25, 0x01A2
     89c:	89 2b       	or	r24, r25
     89e:	80 93 a2 01 	sts	0x01A2, r24
     8a2:	80 91 a1 01 	lds	r24, 0x01A1
     8a6:	84 31       	cpi	r24, 0x14	; 20
     8a8:	18 f4       	brcc	.+6      	; 0x8b0 <LCD_PutChar+0x92>
     8aa:	8f 5f       	subi	r24, 0xFF	; 255
     8ac:	80 93 a1 01 	sts	0x01A1, r24
     8b0:	08 95       	ret

000008b2 <LCD_PutString>:
     8b2:	cf 93       	push	r28
     8b4:	df 93       	push	r29
     8b6:	ec 01       	movw	r28, r24
     8b8:	88 81       	ld	r24, Y
     8ba:	88 23       	and	r24, r24
     8bc:	29 f0       	breq	.+10     	; 0x8c8 <LCD_PutString+0x16>
     8be:	89 91       	ld	r24, Y+
     8c0:	ae df       	rcall	.-164    	; 0x81e <LCD_PutChar>
     8c2:	88 81       	ld	r24, Y
     8c4:	81 11       	cpse	r24, r1
     8c6:	fb cf       	rjmp	.-10     	; 0x8be <LCD_PutString+0xc>
     8c8:	df 91       	pop	r29
     8ca:	cf 91       	pop	r28
     8cc:	08 95       	ret

000008ce <LCD_PutString_P>:
     8ce:	cf 93       	push	r28
     8d0:	df 93       	push	r29
     8d2:	fc 01       	movw	r30, r24
     8d4:	84 91       	lpm	r24, Z
     8d6:	ef 01       	movw	r28, r30
     8d8:	21 96       	adiw	r28, 0x01	; 1
     8da:	88 23       	and	r24, r24
     8dc:	31 f0       	breq	.+12     	; 0x8ea <LCD_PutString_P+0x1c>
     8de:	9f df       	rcall	.-194    	; 0x81e <LCD_PutChar>
     8e0:	fe 01       	movw	r30, r28
     8e2:	84 91       	lpm	r24, Z
     8e4:	21 96       	adiw	r28, 0x01	; 1
     8e6:	81 11       	cpse	r24, r1
     8e8:	fa cf       	rjmp	.-12     	; 0x8de <LCD_PutString_P+0x10>
     8ea:	df 91       	pop	r29
     8ec:	cf 91       	pop	r28
     8ee:	08 95       	ret

000008f0 <LCD_GotoXY>:
     8f0:	80 93 a1 01 	sts	0x01A1, r24
     8f4:	60 93 a0 01 	sts	0x01A0, r22
     8f8:	08 95       	ret

000008fa <Backlight_Off>:
}

void
Backlight_Off (void)
{
  TWI_Start();
     8fa:	6b d0       	rcall	.+214    	; 0x9d2 <TWI_Start>
  TWI_Address_RW(0xc4);
     8fc:	84 ec       	ldi	r24, 0xC4	; 196
     8fe:	84 d0       	rcall	.+264    	; 0xa08 <TWI_Address_RW>
  TWI_Write(0x11);
     900:	81 e1       	ldi	r24, 0x11	; 17
     902:	9f d0       	rcall	.+318    	; 0xa42 <TWI_Write>
  TWI_Write(0x00);
     904:	80 e0       	ldi	r24, 0x00	; 0
     906:	9d d0       	rcall	.+314    	; 0xa42 <TWI_Write>
  TWI_Write(0x00);
     908:	80 e0       	ldi	r24, 0x00	; 0
     90a:	9b d0       	rcall	.+310    	; 0xa42 <TWI_Write>
  TWI_Write(0x00);
     90c:	80 e0       	ldi	r24, 0x00	; 0
     90e:	99 d0       	rcall	.+306    	; 0xa42 <TWI_Write>
  TWI_Write(0x00);
     910:	80 e0       	ldi	r24, 0x00	; 0
     912:	97 d0       	rcall	.+302    	; 0xa42 <TWI_Write>
  TWI_Write(0x00);
     914:	80 e0       	ldi	r24, 0x00	; 0
     916:	95 d0       	rcall	.+298    	; 0xa42 <TWI_Write>
  TWI_Stop();
     918:	b1 c0       	rjmp	.+354    	; 0xa7c <TWI_Stop>
     91a:	08 95       	ret

0000091c <LCD_Init>:
  SPI_MasterTransfer(data);
}

void
LCD_Init (void)
{
     91c:	cf 93       	push	r28
  SPI_MasterInit();
     91e:	2e d0       	rcall	.+92     	; 0x97c <SPI_MasterInit>

  /* Set Register Select and Chip Select as Output */
  DDRC |= (1<<PC7)|(1<<PC6);
     920:	87 b1       	in	r24, 0x07	; 7
     922:	80 6c       	ori	r24, 0xC0	; 192
     924:	87 b9       	out	0x07, r24	; 7
  
  /* Backup Status Register and disable Interrupts */
  uint8_t sreg = SREG;
     926:	cf b7       	in	r28, 0x3f	; 63
  cli();
     928:	f8 94       	cli
  
  /* Starting Init Command Sequence */
  LCD_Command_Mode;
     92a:	47 98       	cbi	0x08, 7	; 8
  LCD_Chip_Select;
     92c:	46 98       	cbi	0x08, 6	; 8
uint8_t lcd_texty = 0;

void
LCD_Send (uint8_t data)
{
  SPI_MasterTransfer(data);
     92e:	82 ee       	ldi	r24, 0xE2	; 226
     930:	37 d0       	rcall	.+110    	; 0x9a0 <SPI_MasterTransfer>
     932:	83 ea       	ldi	r24, 0xA3	; 163
     934:	35 d0       	rcall	.+106    	; 0x9a0 <SPI_MasterTransfer>
     936:	81 e8       	ldi	r24, 0x81	; 129
     938:	33 d0       	rcall	.+102    	; 0x9a0 <SPI_MasterTransfer>
     93a:	88 e0       	ldi	r24, 0x08	; 8
     93c:	31 d0       	rcall	.+98     	; 0x9a0 <SPI_MasterTransfer>
     93e:	80 ea       	ldi	r24, 0xA0	; 160
     940:	2f d0       	rcall	.+94     	; 0x9a0 <SPI_MasterTransfer>
     942:	88 ec       	ldi	r24, 0xC8	; 200
     944:	2d d0       	rcall	.+90     	; 0x9a0 <SPI_MasterTransfer>
     946:	85 e2       	ldi	r24, 0x25	; 37
     948:	2b d0       	rcall	.+86     	; 0x9a0 <SPI_MasterTransfer>
     94a:	8f e2       	ldi	r24, 0x2F	; 47
     94c:	29 d0       	rcall	.+82     	; 0x9a0 <SPI_MasterTransfer>
     94e:	8f ea       	ldi	r24, 0xAF	; 175
     950:	27 d0       	rcall	.+78     	; 0x9a0 <SPI_MasterTransfer>
  LCD_Send(LCD_COMMON_OUTPUT_MODE_REVERSE);
  LCD_Send(LCD_V5_VOLTAGE_REGULATOR | 0x05);
  LCD_Send(LCD_POWER_CONTROLLER_SET | 0x07);
  LCD_Send(LCD_DISPLAY_ON);
  
  LCD_Chip_Unselect;
     952:	46 9a       	sbi	0x08, 6	; 8
  LCD_Data_Mode;
     954:	47 9a       	sbi	0x08, 7	; 8
  
  LCD_Clear();
     956:	4d df       	rcall	.-358    	; 0x7f2 <LCD_Clear>
  
  /* Restore Status Register */
  SREG = sreg;
     958:	cf bf       	out	0x3f, r28	; 63
  
  // Initialize TWI for Backlight Control
  TWI_Init();
     95a:	27 d0       	rcall	.+78     	; 0x9aa <TWI_Init>
  Backlight_Off();
     95c:	ce df       	rcall	.-100    	; 0x8fa <Backlight_Off>
  
  // Initialize Dataflash
  dataflash_init();
     95e:	fa de       	rcall	.-524    	; 0x754 <dataflash_init>
}
     960:	cf 91       	pop	r28
     962:	08 95       	ret

00000964 <Backlight_LED>:
  TWI_Stop();
}

void
Backlight_LED (uint8_t led_selector)
{
     964:	cf 93       	push	r28
     966:	c8 2f       	mov	r28, r24
  TWI_Start();
     968:	34 d0       	rcall	.+104    	; 0x9d2 <TWI_Start>
  TWI_Address_RW(0xc4);
     96a:	84 ec       	ldi	r24, 0xC4	; 196
     96c:	4d d0       	rcall	.+154    	; 0xa08 <TWI_Address_RW>
  TWI_Write(0x15);
     96e:	85 e1       	ldi	r24, 0x15	; 21
     970:	68 d0       	rcall	.+208    	; 0xa42 <TWI_Write>
  TWI_Write(led_selector);
     972:	8c 2f       	mov	r24, r28
     974:	66 d0       	rcall	.+204    	; 0xa42 <TWI_Write>
  TWI_Stop();
     976:	82 d0       	rcall	.+260    	; 0xa7c <TWI_Stop>
}
     978:	cf 91       	pop	r28
     97a:	08 95       	ret

0000097c <SPI_MasterInit>:

void
SPI_MasterInit (void)
{
  /* Check if already initialized */
  if (!(SPI_flag & 1))
     97c:	80 91 a3 01 	lds	r24, 0x01A3
     980:	80 fd       	sbrc	r24, 0
     982:	0d c0       	rjmp	.+26     	; 0x99e <SPI_MasterInit+0x22>
    {
      /* Set MOSI and SCK output */
      DDRB |= (1<<PB5)|(1<<PB7);
     984:	84 b1       	in	r24, 0x04	; 4
     986:	80 6a       	ori	r24, 0xA0	; 160
     988:	84 b9       	out	0x04, r24	; 4
      
      /* Enable SPI, Master */
      SPCR = (1<<SPE)|(1<<MSTR);
     98a:	80 e5       	ldi	r24, 0x50	; 80
     98c:	8c bd       	out	0x2c, r24	; 44
      
      /* Set Double SPI Speed Bit, SPI clock will be fck/2 */
      SPSR = (1<<SPI2X);
     98e:	81 e0       	ldi	r24, 0x01	; 1
     990:	8d bd       	out	0x2d, r24	; 45
      
      /* Set SPI Init Flag */
      SPI_flag = 1;
     992:	81 e0       	ldi	r24, 0x01	; 1
     994:	90 e0       	ldi	r25, 0x00	; 0
     996:	90 93 a4 01 	sts	0x01A4, r25
     99a:	80 93 a3 01 	sts	0x01A3, r24
     99e:	08 95       	ret

000009a0 <SPI_MasterTransfer>:

void
SPI_MasterTransfer (unsigned char c)
{
  /* Start transmission */
  SPDR = c;
     9a0:	8e bd       	out	0x2e, r24	; 46
  
  /* Wait for transmission complete */
  while (!(SPSR & (1<<SPIF)));
     9a2:	0d b4       	in	r0, 0x2d	; 45
     9a4:	07 fe       	sbrs	r0, 7
     9a6:	fd cf       	rjmp	.-6      	; 0x9a2 <SPI_MasterTransfer+0x2>
}
     9a8:	08 95       	ret

000009aa <TWI_Init>:

void
TWI_Init (void)
{
  // Port Setup
  DDRC &= ~((1 << PC0)|(1 << PC1));
     9aa:	87 b1       	in	r24, 0x07	; 7
     9ac:	8c 7f       	andi	r24, 0xFC	; 252
     9ae:	87 b9       	out	0x07, r24	; 7
  PORTC |= (1 << PC0)|(1 << PC1);
     9b0:	88 b1       	in	r24, 0x08	; 8
     9b2:	83 60       	ori	r24, 0x03	; 3
     9b4:	88 b9       	out	0x08, r24	; 8
  
  // Setup TWI Speed to 400kHZ (TWPS = 1)
  TWBR = 3;
     9b6:	83 e0       	ldi	r24, 0x03	; 3
     9b8:	80 93 b8 00 	sts	0x00B8, r24
  
  // Using TIMER2 to detect timeout
  TCCR2B = (7 << CS20);
     9bc:	87 e0       	ldi	r24, 0x07	; 7
     9be:	80 93 b1 00 	sts	0x00B1, r24
  TIMSK2 = (1 << OCIE2A);
     9c2:	82 e0       	ldi	r24, 0x02	; 2
     9c4:	80 93 70 00 	sts	0x0070, r24
  
  OCR2A = 125;
     9c8:	8d e7       	ldi	r24, 0x7D	; 125
     9ca:	80 93 b3 00 	sts	0x00B3, r24
  
  // Interrupts REQUIRED!
  sei();
     9ce:	78 94       	sei
     9d0:	08 95       	ret

000009d2 <TWI_Start>:
}

int16_t
TWI_Start (void)
{
  twi_timeout = 10;
     9d2:	8a e0       	ldi	r24, 0x0A	; 10
     9d4:	80 93 a5 01 	sts	0x01A5, r24
  
  TWCR = (1 << TWINT)|(1 << TWSTA)|(1 << TWEN);
     9d8:	84 ea       	ldi	r24, 0xA4	; 164
     9da:	80 93 bc 00 	sts	0x00BC, r24
  while ((twi_timeout) && (!(TWCR & (1 << TWINT))));
     9de:	ec eb       	ldi	r30, 0xBC	; 188
     9e0:	f0 e0       	ldi	r31, 0x00	; 0
     9e2:	80 91 a5 01 	lds	r24, 0x01A5
     9e6:	88 23       	and	r24, r24
     9e8:	19 f0       	breq	.+6      	; 0x9f0 <TWI_Start+0x1e>
     9ea:	80 81       	ld	r24, Z
     9ec:	88 23       	and	r24, r24
     9ee:	cc f7       	brge	.-14     	; 0x9e2 <TWI_Start+0x10>
  
  if (twi_timeout)
     9f0:	80 91 a5 01 	lds	r24, 0x01A5
     9f4:	88 23       	and	r24, r24
     9f6:	29 f0       	breq	.+10     	; 0xa02 <TWI_Start+0x30>
    return (int16_t) (TWSR & 0xf8);
     9f8:	80 91 b9 00 	lds	r24, 0x00B9
     9fc:	88 7f       	andi	r24, 0xF8	; 248
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	08 95       	ret
  else
    return -1;
     a02:	8f ef       	ldi	r24, 0xFF	; 255
     a04:	9f ef       	ldi	r25, 0xFF	; 255
}
     a06:	08 95       	ret

00000a08 <TWI_Address_RW>:

int16_t
TWI_Address_RW (uint8_t address)
{
  twi_timeout = 10;
     a08:	9a e0       	ldi	r25, 0x0A	; 10
     a0a:	90 93 a5 01 	sts	0x01A5, r25
  
  TWDR = address;
     a0e:	80 93 bb 00 	sts	0x00BB, r24
  TWCR = (1 << TWINT)|(1 << TWEN);
     a12:	84 e8       	ldi	r24, 0x84	; 132
     a14:	80 93 bc 00 	sts	0x00BC, r24
  while ((twi_timeout) && (!(TWCR & (1 << TWINT))));
     a18:	ec eb       	ldi	r30, 0xBC	; 188
     a1a:	f0 e0       	ldi	r31, 0x00	; 0
     a1c:	80 91 a5 01 	lds	r24, 0x01A5
     a20:	88 23       	and	r24, r24
     a22:	19 f0       	breq	.+6      	; 0xa2a <TWI_Address_RW+0x22>
     a24:	80 81       	ld	r24, Z
     a26:	88 23       	and	r24, r24
     a28:	cc f7       	brge	.-14     	; 0xa1c <TWI_Address_RW+0x14>
  
  if (twi_timeout)
     a2a:	80 91 a5 01 	lds	r24, 0x01A5
     a2e:	88 23       	and	r24, r24
     a30:	29 f0       	breq	.+10     	; 0xa3c <TWI_Address_RW+0x34>
    return (int16_t) (TWSR & 0xf8);
     a32:	80 91 b9 00 	lds	r24, 0x00B9
     a36:	88 7f       	andi	r24, 0xF8	; 248
     a38:	90 e0       	ldi	r25, 0x00	; 0
     a3a:	08 95       	ret
  else
    return -1;
     a3c:	8f ef       	ldi	r24, 0xFF	; 255
     a3e:	9f ef       	ldi	r25, 0xFF	; 255
}
     a40:	08 95       	ret

00000a42 <TWI_Write>:

int16_t
TWI_Write (uint8_t data)
{
  twi_timeout = 10;
     a42:	9a e0       	ldi	r25, 0x0A	; 10
     a44:	90 93 a5 01 	sts	0x01A5, r25
  
  TWDR = data;
     a48:	80 93 bb 00 	sts	0x00BB, r24
  TWCR = (1 << TWINT)|(1 << TWEN);
     a4c:	84 e8       	ldi	r24, 0x84	; 132
     a4e:	80 93 bc 00 	sts	0x00BC, r24
  while ((twi_timeout) && (!(TWCR & (1 << TWINT))));
     a52:	ec eb       	ldi	r30, 0xBC	; 188
     a54:	f0 e0       	ldi	r31, 0x00	; 0
     a56:	80 91 a5 01 	lds	r24, 0x01A5
     a5a:	88 23       	and	r24, r24
     a5c:	19 f0       	breq	.+6      	; 0xa64 <TWI_Write+0x22>
     a5e:	80 81       	ld	r24, Z
     a60:	88 23       	and	r24, r24
     a62:	cc f7       	brge	.-14     	; 0xa56 <TWI_Write+0x14>
  
  if (twi_timeout)
     a64:	80 91 a5 01 	lds	r24, 0x01A5
     a68:	88 23       	and	r24, r24
     a6a:	29 f0       	breq	.+10     	; 0xa76 <TWI_Write+0x34>
    return (int16_t) (TWSR & 0xf8);
     a6c:	80 91 b9 00 	lds	r24, 0x00B9
     a70:	88 7f       	andi	r24, 0xF8	; 248
     a72:	90 e0       	ldi	r25, 0x00	; 0
     a74:	08 95       	ret
  else
    return -1;
     a76:	8f ef       	ldi	r24, 0xFF	; 255
     a78:	9f ef       	ldi	r25, 0xFF	; 255
}
     a7a:	08 95       	ret

00000a7c <TWI_Stop>:

void
TWI_Stop (void)
{
  twi_timeout = 10;
     a7c:	8a e0       	ldi	r24, 0x0A	; 10
     a7e:	80 93 a5 01 	sts	0x01A5, r24
  
  TWCR = (1 << TWINT)|(1 << TWEN)|(1 << TWSTO);
     a82:	84 e9       	ldi	r24, 0x94	; 148
     a84:	80 93 bc 00 	sts	0x00BC, r24
     a88:	08 95       	ret

00000a8a <__vector_9>:
}

// ISR will be called every 8ms to decrease twi_timeout if > 0
ISR (TIMER2_COMPA_vect)
{
     a8a:	1f 92       	push	r1
     a8c:	0f 92       	push	r0
     a8e:	0f b6       	in	r0, 0x3f	; 63
     a90:	0f 92       	push	r0
     a92:	11 24       	eor	r1, r1
     a94:	0b b6       	in	r0, 0x3b	; 59
     a96:	0f 92       	push	r0
     a98:	8f 93       	push	r24
     a9a:	ef 93       	push	r30
     a9c:	ff 93       	push	r31
  OCR2A += 125;
     a9e:	e3 eb       	ldi	r30, 0xB3	; 179
     aa0:	f0 e0       	ldi	r31, 0x00	; 0
     aa2:	80 81       	ld	r24, Z
     aa4:	83 58       	subi	r24, 0x83	; 131
     aa6:	80 83       	st	Z, r24

  if (twi_timeout)
     aa8:	80 91 a5 01 	lds	r24, 0x01A5
     aac:	88 23       	and	r24, r24
     aae:	29 f0       	breq	.+10     	; 0xaba <__vector_9+0x30>
    twi_timeout--;
     ab0:	80 91 a5 01 	lds	r24, 0x01A5
     ab4:	81 50       	subi	r24, 0x01	; 1
     ab6:	80 93 a5 01 	sts	0x01A5, r24
}
     aba:	ff 91       	pop	r31
     abc:	ef 91       	pop	r30
     abe:	8f 91       	pop	r24
     ac0:	0f 90       	pop	r0
     ac2:	0b be       	out	0x3b, r0	; 59
     ac4:	0f 90       	pop	r0
     ac6:	0f be       	out	0x3f, r0	; 63
     ac8:	0f 90       	pop	r0
     aca:	1f 90       	pop	r1
     acc:	18 95       	reti

00000ace <__vector_20>:
uint8_t get_min_from_ascii(char* in)
{
	uint8_t min = in[3] - 48;
	min = min+((in[2]-48)*10);
	return min;
}
     ace:	1f 92       	push	r1
     ad0:	0f 92       	push	r0
     ad2:	0f b6       	in	r0, 0x3f	; 63
     ad4:	0f 92       	push	r0
     ad6:	11 24       	eor	r1, r1
     ad8:	0b b6       	in	r0, 0x3b	; 59
     ada:	0f 92       	push	r0
     adc:	2f 93       	push	r18
     ade:	8f 93       	push	r24
     ae0:	9f 93       	push	r25
     ae2:	ef 93       	push	r30
     ae4:	ff 93       	push	r31
     ae6:	90 91 c6 00 	lds	r25, 0x00C6
     aea:	9d 30       	cpi	r25, 0x0D	; 13
     aec:	19 f1       	breq	.+70     	; 0xb34 <__vector_20+0x66>
     aee:	80 91 b1 01 	lds	r24, 0x01B1
     af2:	81 30       	cpi	r24, 0x01	; 1
     af4:	19 f4       	brne	.+6      	; 0xafc <__vector_20+0x2e>
     af6:	90 93 b0 01 	sts	0x01B0, r25
     afa:	18 c0       	rjmp	.+48     	; 0xb2c <__vector_20+0x5e>
     afc:	2e ef       	ldi	r18, 0xFE	; 254
     afe:	28 0f       	add	r18, r24
     b00:	20 3a       	cpi	r18, 0xA0	; 160
     b02:	80 f4       	brcc	.+32     	; 0xb24 <__vector_20+0x56>
     b04:	20 91 b0 01 	lds	r18, 0x01B0
     b08:	23 30       	cpi	r18, 0x03	; 3
     b0a:	61 f4       	brne	.+24     	; 0xb24 <__vector_20+0x56>
     b0c:	e8 2f       	mov	r30, r24
     b0e:	f0 e0       	ldi	r31, 0x00	; 0
     b10:	ef 54       	subi	r30, 0x4F	; 79
     b12:	fa 4f       	sbci	r31, 0xFA	; 250
     b14:	90 83       	st	Z, r25
     b16:	90 81       	ld	r25, Z
     b18:	20 91 af 01 	lds	r18, 0x01AF
     b1c:	92 27       	eor	r25, r18
     b1e:	90 93 af 01 	sts	0x01AF, r25
     b22:	04 c0       	rjmp	.+8      	; 0xb2c <__vector_20+0x5e>
     b24:	82 3a       	cpi	r24, 0xA2	; 162
     b26:	11 f4       	brne	.+4      	; 0xb2c <__vector_20+0x5e>
     b28:	90 93 ae 01 	sts	0x01AE, r25
     b2c:	8f 5f       	subi	r24, 0xFF	; 255
     b2e:	80 93 b1 01 	sts	0x01B1, r24
     b32:	12 c0       	rjmp	.+36     	; 0xb58 <__vector_20+0x8a>
     b34:	90 91 af 01 	lds	r25, 0x01AF
     b38:	80 91 ae 01 	lds	r24, 0x01AE
     b3c:	98 13       	cpse	r25, r24
     b3e:	03 c0       	rjmp	.+6      	; 0xb46 <__vector_20+0x78>
     b40:	81 e0       	ldi	r24, 0x01	; 1
     b42:	80 93 b2 01 	sts	0x01B2, r24
     b46:	10 92 b1 01 	sts	0x01B1, r1
     b4a:	10 92 b0 01 	sts	0x01B0, r1
     b4e:	8b eb       	ldi	r24, 0xBB	; 187
     b50:	80 93 ae 01 	sts	0x01AE, r24
     b54:	10 92 af 01 	sts	0x01AF, r1
     b58:	ff 91       	pop	r31
     b5a:	ef 91       	pop	r30
     b5c:	9f 91       	pop	r25
     b5e:	8f 91       	pop	r24
     b60:	2f 91       	pop	r18
     b62:	0f 90       	pop	r0
     b64:	0b be       	out	0x3b, r0	; 59
     b66:	0f 90       	pop	r0
     b68:	0f be       	out	0x3f, r0	; 63
     b6a:	0f 90       	pop	r0
     b6c:	1f 90       	pop	r1
     b6e:	18 95       	reti

00000b70 <__vector_22>:
     b70:	1f 92       	push	r1
     b72:	0f 92       	push	r0
     b74:	0f b6       	in	r0, 0x3f	; 63
     b76:	0f 92       	push	r0
     b78:	11 24       	eor	r1, r1
     b7a:	0b b6       	in	r0, 0x3b	; 59
     b7c:	0f 92       	push	r0
     b7e:	2f 93       	push	r18
     b80:	8f 93       	push	r24
     b82:	9f 93       	push	r25
     b84:	ef 93       	push	r30
     b86:	ff 93       	push	r31
     b88:	e0 91 ad 01 	lds	r30, 0x01AD
     b8c:	e0 3a       	cpi	r30, 0xA0	; 160
     b8e:	b0 f4       	brcc	.+44     	; 0xbbc <__vector_22+0x4c>
     b90:	f0 e0       	ldi	r31, 0x00	; 0
     b92:	e0 50       	subi	r30, 0x00	; 0
     b94:	ff 4f       	sbci	r31, 0xFF	; 255
     b96:	80 81       	ld	r24, Z
     b98:	80 93 c6 00 	sts	0x00C6, r24
     b9c:	80 91 ad 01 	lds	r24, 0x01AD
     ba0:	e8 2f       	mov	r30, r24
     ba2:	f0 e0       	ldi	r31, 0x00	; 0
     ba4:	e0 50       	subi	r30, 0x00	; 0
     ba6:	ff 4f       	sbci	r31, 0xFF	; 255
     ba8:	90 81       	ld	r25, Z
     baa:	20 91 ac 01 	lds	r18, 0x01AC
     bae:	92 27       	eor	r25, r18
     bb0:	90 93 ac 01 	sts	0x01AC, r25
     bb4:	8f 5f       	subi	r24, 0xFF	; 255
     bb6:	80 93 ad 01 	sts	0x01AD, r24
     bba:	1d c0       	rjmp	.+58     	; 0xbf6 <__vector_22+0x86>
     bbc:	e0 3a       	cpi	r30, 0xA0	; 160
     bbe:	51 f4       	brne	.+20     	; 0xbd4 <__vector_22+0x64>
     bc0:	80 91 ac 01 	lds	r24, 0x01AC
     bc4:	80 93 c6 00 	sts	0x00C6, r24
     bc8:	80 91 ad 01 	lds	r24, 0x01AD
     bcc:	8f 5f       	subi	r24, 0xFF	; 255
     bce:	80 93 ad 01 	sts	0x01AD, r24
     bd2:	11 c0       	rjmp	.+34     	; 0xbf6 <__vector_22+0x86>
     bd4:	e1 3a       	cpi	r30, 0xA1	; 161
     bd6:	49 f4       	brne	.+18     	; 0xbea <__vector_22+0x7a>
     bd8:	8d e0       	ldi	r24, 0x0D	; 13
     bda:	80 93 c6 00 	sts	0x00C6, r24
     bde:	80 91 ad 01 	lds	r24, 0x01AD
     be2:	8f 5f       	subi	r24, 0xFF	; 255
     be4:	80 93 ad 01 	sts	0x01AD, r24
     be8:	06 c0       	rjmp	.+12     	; 0xbf6 <__vector_22+0x86>
     bea:	10 92 ac 01 	sts	0x01AC, r1
     bee:	10 92 ad 01 	sts	0x01AD, r1
     bf2:	10 92 b2 01 	sts	0x01B2, r1
     bf6:	ff 91       	pop	r31
     bf8:	ef 91       	pop	r30
     bfa:	9f 91       	pop	r25
     bfc:	8f 91       	pop	r24
     bfe:	2f 91       	pop	r18
     c00:	0f 90       	pop	r0
     c02:	0b be       	out	0x3b, r0	; 59
     c04:	0f 90       	pop	r0
     c06:	0f be       	out	0x3f, r0	; 63
     c08:	0f 90       	pop	r0
     c0a:	1f 90       	pop	r1
     c0c:	18 95       	reti

00000c0e <__vector_28>:
     c0e:	1f 92       	push	r1
     c10:	0f 92       	push	r0
     c12:	0f b6       	in	r0, 0x3f	; 63
     c14:	0f 92       	push	r0
     c16:	11 24       	eor	r1, r1
     c18:	0b b6       	in	r0, 0x3b	; 59
     c1a:	0f 92       	push	r0
     c1c:	2f 93       	push	r18
     c1e:	8f 93       	push	r24
     c20:	9f 93       	push	r25
     c22:	ef 93       	push	r30
     c24:	ff 93       	push	r31
     c26:	90 91 ce 00 	lds	r25, 0x00CE
     c2a:	9d 30       	cpi	r25, 0x0D	; 13
     c2c:	19 f1       	breq	.+70     	; 0xc74 <__vector_28+0x66>
     c2e:	80 91 ab 01 	lds	r24, 0x01AB
     c32:	81 30       	cpi	r24, 0x01	; 1
     c34:	19 f4       	brne	.+6      	; 0xc3c <__vector_28+0x2e>
     c36:	90 93 aa 01 	sts	0x01AA, r25
     c3a:	18 c0       	rjmp	.+48     	; 0xc6c <__vector_28+0x5e>
     c3c:	2e ef       	ldi	r18, 0xFE	; 254
     c3e:	28 0f       	add	r18, r24
     c40:	20 3a       	cpi	r18, 0xA0	; 160
     c42:	80 f4       	brcc	.+32     	; 0xc64 <__vector_28+0x56>
     c44:	20 91 aa 01 	lds	r18, 0x01AA
     c48:	23 30       	cpi	r18, 0x03	; 3
     c4a:	61 f4       	brne	.+24     	; 0xc64 <__vector_28+0x56>
     c4c:	e8 2f       	mov	r30, r24
     c4e:	f0 e0       	ldi	r31, 0x00	; 0
     c50:	ef 54       	subi	r30, 0x4F	; 79
     c52:	fa 4f       	sbci	r31, 0xFA	; 250
     c54:	90 83       	st	Z, r25
     c56:	90 81       	ld	r25, Z
     c58:	20 91 a9 01 	lds	r18, 0x01A9
     c5c:	92 27       	eor	r25, r18
     c5e:	90 93 a9 01 	sts	0x01A9, r25
     c62:	04 c0       	rjmp	.+8      	; 0xc6c <__vector_28+0x5e>
     c64:	82 3a       	cpi	r24, 0xA2	; 162
     c66:	11 f4       	brne	.+4      	; 0xc6c <__vector_28+0x5e>
     c68:	90 93 a8 01 	sts	0x01A8, r25
     c6c:	8f 5f       	subi	r24, 0xFF	; 255
     c6e:	80 93 ab 01 	sts	0x01AB, r24
     c72:	12 c0       	rjmp	.+36     	; 0xc98 <__vector_28+0x8a>
     c74:	90 91 a9 01 	lds	r25, 0x01A9
     c78:	80 91 a8 01 	lds	r24, 0x01A8
     c7c:	98 13       	cpse	r25, r24
     c7e:	03 c0       	rjmp	.+6      	; 0xc86 <__vector_28+0x78>
     c80:	81 e0       	ldi	r24, 0x01	; 1
     c82:	80 93 b2 01 	sts	0x01B2, r24
     c86:	10 92 ab 01 	sts	0x01AB, r1
     c8a:	10 92 aa 01 	sts	0x01AA, r1
     c8e:	8b eb       	ldi	r24, 0xBB	; 187
     c90:	80 93 a8 01 	sts	0x01A8, r24
     c94:	10 92 a9 01 	sts	0x01A9, r1
     c98:	ff 91       	pop	r31
     c9a:	ef 91       	pop	r30
     c9c:	9f 91       	pop	r25
     c9e:	8f 91       	pop	r24
     ca0:	2f 91       	pop	r18
     ca2:	0f 90       	pop	r0
     ca4:	0b be       	out	0x3b, r0	; 59
     ca6:	0f 90       	pop	r0
     ca8:	0f be       	out	0x3f, r0	; 63
     caa:	0f 90       	pop	r0
     cac:	1f 90       	pop	r1
     cae:	18 95       	reti

00000cb0 <__vector_30>:
     cb0:	1f 92       	push	r1
     cb2:	0f 92       	push	r0
     cb4:	0f b6       	in	r0, 0x3f	; 63
     cb6:	0f 92       	push	r0
     cb8:	11 24       	eor	r1, r1
     cba:	0b b6       	in	r0, 0x3b	; 59
     cbc:	0f 92       	push	r0
     cbe:	2f 93       	push	r18
     cc0:	8f 93       	push	r24
     cc2:	9f 93       	push	r25
     cc4:	ef 93       	push	r30
     cc6:	ff 93       	push	r31
     cc8:	e0 91 a7 01 	lds	r30, 0x01A7
     ccc:	e0 3a       	cpi	r30, 0xA0	; 160
     cce:	b0 f4       	brcc	.+44     	; 0xcfc <__vector_30+0x4c>
     cd0:	f0 e0       	ldi	r31, 0x00	; 0
     cd2:	e0 50       	subi	r30, 0x00	; 0
     cd4:	ff 4f       	sbci	r31, 0xFF	; 255
     cd6:	80 81       	ld	r24, Z
     cd8:	80 93 ce 00 	sts	0x00CE, r24
     cdc:	80 91 a7 01 	lds	r24, 0x01A7
     ce0:	e8 2f       	mov	r30, r24
     ce2:	f0 e0       	ldi	r31, 0x00	; 0
     ce4:	e0 50       	subi	r30, 0x00	; 0
     ce6:	ff 4f       	sbci	r31, 0xFF	; 255
     ce8:	90 81       	ld	r25, Z
     cea:	20 91 a6 01 	lds	r18, 0x01A6
     cee:	92 27       	eor	r25, r18
     cf0:	90 93 a6 01 	sts	0x01A6, r25
     cf4:	8f 5f       	subi	r24, 0xFF	; 255
     cf6:	80 93 a7 01 	sts	0x01A7, r24
     cfa:	1d c0       	rjmp	.+58     	; 0xd36 <__vector_30+0x86>
     cfc:	e0 3a       	cpi	r30, 0xA0	; 160
     cfe:	51 f4       	brne	.+20     	; 0xd14 <__vector_30+0x64>
     d00:	80 91 a6 01 	lds	r24, 0x01A6
     d04:	80 93 ce 00 	sts	0x00CE, r24
     d08:	80 91 a7 01 	lds	r24, 0x01A7
     d0c:	8f 5f       	subi	r24, 0xFF	; 255
     d0e:	80 93 a7 01 	sts	0x01A7, r24
     d12:	11 c0       	rjmp	.+34     	; 0xd36 <__vector_30+0x86>
     d14:	e1 3a       	cpi	r30, 0xA1	; 161
     d16:	49 f4       	brne	.+18     	; 0xd2a <__vector_30+0x7a>
     d18:	8d e0       	ldi	r24, 0x0D	; 13
     d1a:	80 93 ce 00 	sts	0x00CE, r24
     d1e:	80 91 a7 01 	lds	r24, 0x01A7
     d22:	8f 5f       	subi	r24, 0xFF	; 255
     d24:	80 93 a7 01 	sts	0x01A7, r24
     d28:	06 c0       	rjmp	.+12     	; 0xd36 <__vector_30+0x86>
     d2a:	10 92 a6 01 	sts	0x01A6, r1
     d2e:	10 92 a7 01 	sts	0x01A7, r1
     d32:	10 92 b2 01 	sts	0x01B2, r1
     d36:	ff 91       	pop	r31
     d38:	ef 91       	pop	r30
     d3a:	9f 91       	pop	r25
     d3c:	8f 91       	pop	r24
     d3e:	2f 91       	pop	r18
     d40:	0f 90       	pop	r0
     d42:	0b be       	out	0x3b, r0	; 59
     d44:	0f 90       	pop	r0
     d46:	0f be       	out	0x3f, r0	; 63
     d48:	0f 90       	pop	r0
     d4a:	1f 90       	pop	r1
     d4c:	18 95       	reti

00000d4e <uart_init0>:
     d4e:	e0 ec       	ldi	r30, 0xC0	; 192
     d50:	f0 e0       	ldi	r31, 0x00	; 0
     d52:	80 81       	ld	r24, Z
     d54:	80 83       	st	Z, r24
     d56:	88 ed       	ldi	r24, 0xD8	; 216
     d58:	80 93 c1 00 	sts	0x00C1, r24
     d5c:	86 e0       	ldi	r24, 0x06	; 6
     d5e:	80 93 c2 00 	sts	0x00C2, r24
     d62:	10 92 c5 00 	sts	0x00C5, r1
     d66:	81 e0       	ldi	r24, 0x01	; 1
     d68:	80 93 c4 00 	sts	0x00C4, r24
     d6c:	08 95       	ret

00000d6e <uart_tx_byte>:


void uart_tx_byte(unsigned char c)
{
	while (!(UCSR0A & (1<<UDRE0)))  /* warten bis Senden moeglich */
     d6e:	e0 ec       	ldi	r30, 0xC0	; 192
     d70:	f0 e0       	ldi	r31, 0x00	; 0
     d72:	90 81       	ld	r25, Z
     d74:	95 ff       	sbrs	r25, 5
     d76:	fd cf       	rjmp	.-6      	; 0xd72 <uart_tx_byte+0x4>
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     d78:	f8 94       	cli
	{
	}
	ATOMIC_BLOCK(ATOMIC_FORCEON)
	{
		UDR0 = c;
     d7a:	80 93 c6 00 	sts	0x00C6, r24
    return 1;
}

static __inline__ void __iSeiParam(const uint8_t *__s)
{
    sei();
     d7e:	78 94       	sei
    __asm__ volatile ("" ::: "memory");
     d80:	08 95       	ret

00000d82 <uart0_tx_frame>:
	}
}

uint8_t uart0_tx_frame()
{
	uart_tx_byte(PREAMBLE);
     d82:	8a ea       	ldi	r24, 0xAA	; 170
     d84:	f4 df       	rcall	.-24     	; 0xd6e <uart_tx_byte>
	uart_tx_byte(device_address);
     d86:	83 e0       	ldi	r24, 0x03	; 3
     d88:	f2 df       	rcall	.-28     	; 0xd6e <uart_tx_byte>
	return 1;
}
     d8a:	81 e0       	ldi	r24, 0x01	; 1
     d8c:	08 95       	ret

00000d8e <start>:
	}
}

void start ()
{
	Backlight_LED(BL_RED_ON | BL_GREEN_ON | BL_BLUE_ON);
     d8e:	85 e1       	ldi	r24, 0x15	; 21
     d90:	e9 dd       	rcall	.-1070   	; 0x964 <Backlight_LED>
	LCD_PutString_P(PSTR("Project 04:\r\n"));
     d92:	8a e0       	ldi	r24, 0x0A	; 10
     d94:	97 e0       	ldi	r25, 0x07	; 7
     d96:	9b dd       	rcall	.-1226   	; 0x8ce <LCD_PutString_P>
	LCD_PutString_P(PSTR("DDS-Signalgenerator\r\n"));
     d98:	84 ef       	ldi	r24, 0xF4	; 244
     d9a:	96 e0       	ldi	r25, 0x06	; 6
     d9c:	98 dd       	rcall	.-1232   	; 0x8ce <LCD_PutString_P>
	LCD_PutString_P(PSTR("Members:\r\n"));
     d9e:	89 ee       	ldi	r24, 0xE9	; 233
     da0:	96 e0       	ldi	r25, 0x06	; 6
     da2:	95 dd       	rcall	.-1238   	; 0x8ce <LCD_PutString_P>
	LCD_PutString_P(PSTR("Wang Shihang\r\n"));
     da4:	8a ed       	ldi	r24, 0xDA	; 218
     da6:	96 e0       	ldi	r25, 0x06	; 6
     da8:	92 dd       	rcall	.-1244   	; 0x8ce <LCD_PutString_P>
	LCD_PutString_P(PSTR("Li Xuejing\r\n"));
     daa:	8d ec       	ldi	r24, 0xCD	; 205
     dac:	96 e0       	ldi	r25, 0x06	; 6
     dae:	8f dd       	rcall	.-1250   	; 0x8ce <LCD_PutString_P>

	LCD_Update();
     db0:	d5 dc       	rcall	.-1622   	; 0x75c <LCD_Update>
	wait_joy_button();
     db2:	67 e0       	ldi	r22, 0x07	; 7
     db4:	84 e1       	ldi	r24, 0x14	; 20
     db6:	9c dd       	rcall	.-1224   	; 0x8f0 <LCD_GotoXY>
     db8:	80 e1       	ldi	r24, 0x10	; 16
     dba:	31 dd       	rcall	.-1438   	; 0x81e <LCD_PutChar>
     dbc:	cf dc       	rcall	.-1634   	; 0x75c <LCD_Update>
     dbe:	03 99       	sbic	0x00, 3	; 0
     dc0:	fe cf       	rjmp	.-4      	; 0xdbe <start+0x30>
     dc2:	03 9b       	sbis	0x00, 3	; 0
     dc4:	fe cf       	rjmp	.-4      	; 0xdc2 <start+0x34>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     dc6:	2f ef       	ldi	r18, 0xFF	; 255
     dc8:	89 ef       	ldi	r24, 0xF9	; 249
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	21 50       	subi	r18, 0x01	; 1
     dce:	80 40       	sbci	r24, 0x00	; 0
     dd0:	90 40       	sbci	r25, 0x00	; 0
     dd2:	e1 f7       	brne	.-8      	; 0xdcc <start+0x3e>
     dd4:	00 c0       	rjmp	.+0      	; 0xdd6 <start+0x48>
     dd6:	00 00       	nop
     dd8:	03 99       	sbic	0x00, 3	; 0
     dda:	fe cf       	rjmp	.-4      	; 0xdd8 <start+0x4a>
}
     ddc:	08 95       	ret

00000dde <AD9850_setup>:

void AD9850_setup()
{
	DDRC |= ((1<<DATA)|(1<<WCLK)|(1<<FQUP)|(1<<RESET));		//???AD9850?????????
     dde:	87 b1       	in	r24, 0x07	; 7
     de0:	8c 63       	ori	r24, 0x3C	; 60
     de2:	87 b9       	out	0x07, r24	; 7
	PORTC &= ~((1<<DATA)|(1<<WCLK)|(1<<FQUP)|(1<<RESET));	//????????????
     de4:	88 b1       	in	r24, 0x08	; 8
     de6:	83 7c       	andi	r24, 0xC3	; 195
     de8:	88 b9       	out	0x08, r24	; 8
     dea:	08 95       	ret

00000dec <AD9850_reset>:
}

void AD9850_reset()
{
	PORTC &= ~((1<<WCLK)|(1<<FQUP));
     dec:	88 b1       	in	r24, 0x08	; 8
     dee:	87 7e       	andi	r24, 0xE7	; 231
     df0:	88 b9       	out	0x08, r24	; 8
	PORTC &= ~(1<<RESET);									//pulse RESET
     df2:	42 98       	cbi	0x08, 2	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     df4:	8a e1       	ldi	r24, 0x1A	; 26
     df6:	8a 95       	dec	r24
     df8:	f1 f7       	brne	.-4      	; 0xdf6 <AD9850_reset+0xa>
     dfa:	00 c0       	rjmp	.+0      	; 0xdfc <AD9850_reset+0x10>
	_delay_us(5);
	PORTC |= (1<<RESET);
     dfc:	42 9a       	sbi	0x08, 2	; 8
     dfe:	8a e1       	ldi	r24, 0x1A	; 26
     e00:	8a 95       	dec	r24
     e02:	f1 f7       	brne	.-4      	; 0xe00 <AD9850_reset+0x14>
     e04:	00 c0       	rjmp	.+0      	; 0xe06 <AD9850_reset+0x1a>
	_delay_us(5);
	PORTC &= ~(1<<RESET);
     e06:	42 98       	cbi	0x08, 2	; 8
     e08:	8a e1       	ldi	r24, 0x1A	; 26
     e0a:	8a 95       	dec	r24
     e0c:	f1 f7       	brne	.-4      	; 0xe0a <AD9850_reset+0x1e>
     e0e:	00 c0       	rjmp	.+0      	; 0xe10 <AD9850_reset+0x24>
	_delay_us(5);
	
	PORTC &= ~(1<<WCLK);									//pulse WCLK
     e10:	44 98       	cbi	0x08, 4	; 8
     e12:	8a e1       	ldi	r24, 0x1A	; 26
     e14:	8a 95       	dec	r24
     e16:	f1 f7       	brne	.-4      	; 0xe14 <AD9850_reset+0x28>
     e18:	00 c0       	rjmp	.+0      	; 0xe1a <AD9850_reset+0x2e>
	_delay_us(5);
	PORTC |= (1<<WCLK);
     e1a:	44 9a       	sbi	0x08, 4	; 8
     e1c:	8a e1       	ldi	r24, 0x1A	; 26
     e1e:	8a 95       	dec	r24
     e20:	f1 f7       	brne	.-4      	; 0xe1e <AD9850_reset+0x32>
     e22:	00 c0       	rjmp	.+0      	; 0xe24 <AD9850_reset+0x38>
	_delay_us(5);
	PORTC &= ~(1<<WCLK);
     e24:	44 98       	cbi	0x08, 4	; 8
     e26:	8a e1       	ldi	r24, 0x1A	; 26
     e28:	8a 95       	dec	r24
     e2a:	f1 f7       	brne	.-4      	; 0xe28 <AD9850_reset+0x3c>
     e2c:	00 c0       	rjmp	.+0      	; 0xe2e <AD9850_reset+0x42>
	_delay_us(5);
	
	PORTC &= ~(1<<DATA);									//make sure DATA pin is LOW
     e2e:	45 98       	cbi	0x08, 5	; 8
	
	PORTC &= ~(1<<FQUP);									//pulse FQUP
     e30:	43 98       	cbi	0x08, 3	; 8
     e32:	8a e1       	ldi	r24, 0x1A	; 26
     e34:	8a 95       	dec	r24
     e36:	f1 f7       	brne	.-4      	; 0xe34 <AD9850_reset+0x48>
     e38:	00 c0       	rjmp	.+0      	; 0xe3a <AD9850_reset+0x4e>
	_delay_us(5);
	PORTC |= (1<<FQUP);
     e3a:	43 9a       	sbi	0x08, 3	; 8
     e3c:	8a e1       	ldi	r24, 0x1A	; 26
     e3e:	8a 95       	dec	r24
     e40:	f1 f7       	brne	.-4      	; 0xe3e <AD9850_reset+0x52>
     e42:	00 c0       	rjmp	.+0      	; 0xe44 <AD9850_reset+0x58>
	_delay_us(5);
	PORTC &= ~(1<<FQUP);
     e44:	43 98       	cbi	0x08, 3	; 8
     e46:	8a e1       	ldi	r24, 0x1A	; 26
     e48:	8a 95       	dec	r24
     e4a:	f1 f7       	brne	.-4      	; 0xe48 <AD9850_reset+0x5c>
     e4c:	00 c0       	rjmp	.+0      	; 0xe4e <AD9850_reset+0x62>
     e4e:	08 95       	ret

00000e50 <get_frequence>:
	_delay_us(5);
	// chip ist reset now
}

void get_frequence()
{	
     e50:	cf 92       	push	r12
     e52:	df 92       	push	r13
     e54:	ef 92       	push	r14
     e56:	ff 92       	push	r15
     e58:	cf 93       	push	r28
     e5a:	df 93       	push	r29
     e5c:	cd b7       	in	r28, 0x3d	; 61
     e5e:	de b7       	in	r29, 0x3e	; 62
     e60:	a0 97       	sbiw	r28, 0x20	; 32
     e62:	0f b6       	in	r0, 0x3f	; 63
     e64:	f8 94       	cli
     e66:	de bf       	out	0x3e, r29	; 62
     e68:	0f be       	out	0x3f, r0	; 63
     e6a:	cd bf       	out	0x3d, r28	; 61
   // uart_init1();
    //uart_init0();
	char buffer[32];
	LCD_Clear();
     e6c:	c2 dc       	rcall	.-1660   	; 0x7f2 <LCD_Clear>
	LCD_GotoXY(0,0);
     e6e:	60 e0       	ldi	r22, 0x00	; 0
     e70:	80 e0       	ldi	r24, 0x00	; 0
     e72:	3e dd       	rcall	.-1412   	; 0x8f0 <LCD_GotoXY>
	LCD_PutString_P(PSTR("waiting for\r\n "));
     e74:	8e eb       	ldi	r24, 0xBE	; 190
     e76:	96 e0       	ldi	r25, 0x06	; 6
     e78:	2a dd       	rcall	.-1452   	; 0x8ce <LCD_PutString_P>
	LCD_PutString_P(PSTR("the frequence\r\n"));
     e7a:	8e ea       	ldi	r24, 0xAE	; 174
     e7c:	96 e0       	ldi	r25, 0x06	; 6
     e7e:	27 dd       	rcall	.-1458   	; 0x8ce <LCD_PutString_P>
	LCD_GotoXY(20,7);
     e80:	67 e0       	ldi	r22, 0x07	; 7
     e82:	84 e1       	ldi	r24, 0x14	; 20
     e84:	35 dd       	rcall	.-1430   	; 0x8f0 <LCD_GotoXY>
    LCD_PutChar(0x10);
     e86:	80 e1       	ldi	r24, 0x10	; 16
     e88:	ca dc       	rcall	.-1644   	; 0x81e <LCD_PutChar>
	LCD_Update();
     e8a:	68 dc       	rcall	.-1840   	; 0x75c <LCD_Update>
	
    sei();
     e8c:	78 94       	sei
    while(1)
    {
		//uart0_tx_frame();
        if(data_ok == 1)
     e8e:	80 91 b2 01 	lds	r24, 0x01B2
     e92:	81 30       	cpi	r24, 0x01	; 1
     e94:	e1 f7       	brne	.-8      	; 0xe8e <get_frequence+0x3e>
     e96:	c0 90 53 06 	lds	r12, 0x0653
     e9a:	d0 90 54 06 	lds	r13, 0x0654
     e9e:	e0 90 55 06 	lds	r14, 0x0655
     ea2:	f0 90 56 06 	lds	r15, 0x0656
     ea6:	48 e1       	ldi	r20, 0x18	; 24
     ea8:	50 e0       	ldi	r21, 0x00	; 0
     eaa:	23 e0       	ldi	r18, 0x03	; 3
     eac:	30 e0       	ldi	r19, 0x00	; 0
     eae:	02 c0       	rjmp	.+4      	; 0xeb4 <get_frequence+0x64>
			for(i=3;i>=0;i--)
			{
				AD_freq_old = AD_freq;
				AD_freq = data_frame_in[i];
				AD_freq <<= 8*i;
				AD_freq += AD_freq_old;
     eb0:	6c 01       	movw	r12, r24
     eb2:	7d 01       	movw	r14, r26
        {
			int i;
			for(i=3;i>=0;i--)
			{
				AD_freq_old = AD_freq;
				AD_freq = data_frame_in[i];
     eb4:	f9 01       	movw	r30, r18
     eb6:	ed 54       	subi	r30, 0x4D	; 77
     eb8:	fa 4f       	sbci	r31, 0xFA	; 250
     eba:	80 81       	ld	r24, Z
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	a0 e0       	ldi	r26, 0x00	; 0
     ec0:	b0 e0       	ldi	r27, 0x00	; 0
				AD_freq <<= 8*i;
     ec2:	04 2e       	mov	r0, r20
     ec4:	04 c0       	rjmp	.+8      	; 0xece <get_frequence+0x7e>
     ec6:	88 0f       	add	r24, r24
     ec8:	99 1f       	adc	r25, r25
     eca:	aa 1f       	adc	r26, r26
     ecc:	bb 1f       	adc	r27, r27
     ece:	0a 94       	dec	r0
     ed0:	d2 f7       	brpl	.-12     	; 0xec6 <get_frequence+0x76>
				AD_freq += AD_freq_old;
     ed2:	8c 0d       	add	r24, r12
     ed4:	9d 1d       	adc	r25, r13
     ed6:	ae 1d       	adc	r26, r14
     ed8:	bf 1d       	adc	r27, r15
    {
		//uart0_tx_frame();
        if(data_ok == 1)
        {
			int i;
			for(i=3;i>=0;i--)
     eda:	21 50       	subi	r18, 0x01	; 1
     edc:	31 09       	sbc	r19, r1
     ede:	48 50       	subi	r20, 0x08	; 8
     ee0:	51 09       	sbc	r21, r1
     ee2:	2f 3f       	cpi	r18, 0xFF	; 255
     ee4:	6f ef       	ldi	r22, 0xFF	; 255
     ee6:	36 07       	cpc	r19, r22
     ee8:	19 f7       	brne	.-58     	; 0xeb0 <get_frequence+0x60>
     eea:	80 93 53 06 	sts	0x0653, r24
     eee:	90 93 54 06 	sts	0x0654, r25
     ef2:	a0 93 55 06 	sts	0x0655, r26
     ef6:	b0 93 56 06 	sts	0x0656, r27
     efa:	c0 92 57 06 	sts	0x0657, r12
     efe:	d0 92 58 06 	sts	0x0658, r13
     f02:	e0 92 59 06 	sts	0x0659, r14
     f06:	f0 92 5a 06 	sts	0x065A, r15
				AD_freq_old = AD_freq;
				AD_freq = data_frame_in[i];
				AD_freq <<= 8*i;
				AD_freq += AD_freq_old;
			}
			uart0_tx_frame();
     f0a:	3b df       	rcall	.-394    	; 0xd82 <uart0_tx_frame>
			itoa(AD_freq/1000, buffer, 10);
     f0c:	60 91 53 06 	lds	r22, 0x0653
     f10:	70 91 54 06 	lds	r23, 0x0654
     f14:	80 91 55 06 	lds	r24, 0x0655
     f18:	90 91 56 06 	lds	r25, 0x0656
     f1c:	28 ee       	ldi	r18, 0xE8	; 232
     f1e:	33 e0       	ldi	r19, 0x03	; 3
     f20:	40 e0       	ldi	r20, 0x00	; 0
     f22:	50 e0       	ldi	r21, 0x00	; 0
     f24:	c5 d2       	rcall	.+1418   	; 0x14b0 <__udivmodsi4>
     f26:	da 01       	movw	r26, r20
     f28:	c9 01       	movw	r24, r18
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     f2a:	4a e0       	ldi	r20, 0x0A	; 10
     f2c:	be 01       	movw	r22, r28
     f2e:	6f 5f       	subi	r22, 0xFF	; 255
     f30:	7f 4f       	sbci	r23, 0xFF	; 255
     f32:	e0 d2       	rcall	.+1472   	; 0x14f4 <__itoa_ncheck>
			LCD_PutString(buffer);
     f34:	ce 01       	movw	r24, r28
     f36:	01 96       	adiw	r24, 0x01	; 1
     f38:	bc dc       	rcall	.-1672   	; 0x8b2 <LCD_PutString>
			data_ok = 0;
     f3a:	10 92 b2 01 	sts	0x01B2, r1
			break;
        }
    }
}
     f3e:	a0 96       	adiw	r28, 0x20	; 32
     f40:	0f b6       	in	r0, 0x3f	; 63
     f42:	f8 94       	cli
     f44:	de bf       	out	0x3e, r29	; 62
     f46:	0f be       	out	0x3f, r0	; 63
     f48:	cd bf       	out	0x3d, r28	; 61
     f4a:	df 91       	pop	r29
     f4c:	cf 91       	pop	r28
     f4e:	ff 90       	pop	r15
     f50:	ef 90       	pop	r14
     f52:	df 90       	pop	r13
     f54:	cf 90       	pop	r12
     f56:	08 95       	ret

00000f58 <AD9850_Setfrequency>:
void AD9850_Setfrequency(double freq)
{
	int i;
	double x;
	x =  pow(2,32)/125000;
	freq = freq/1000;
     f58:	20 e0       	ldi	r18, 0x00	; 0
     f5a:	30 e0       	ldi	r19, 0x00	; 0
     f5c:	4a e7       	ldi	r20, 0x7A	; 122
     f5e:	54 e4       	ldi	r21, 0x44	; 68
     f60:	22 d1       	rcall	.+580    	; 0x11a6 <__divsf3>
	uint32_t tuning_word = freq * x;
     f62:	2d eb       	ldi	r18, 0xBD	; 189
     f64:	37 e3       	ldi	r19, 0x37	; 55
     f66:	46 e0       	ldi	r20, 0x06	; 6
     f68:	57 e4       	ldi	r21, 0x47	; 71
     f6a:	3f d2       	rcall	.+1150   	; 0x13ea <__mulsf3>
     f6c:	84 d1       	rcall	.+776    	; 0x1276 <__fixunssfsi>
	PORTC &= ~(1<<FQUP);
     f6e:	43 98       	cbi	0x08, 3	; 8
	
	//write W0
	uint8_t W0 = tuning_word;
     f70:	28 e0       	ldi	r18, 0x08	; 8
     f72:	30 e0       	ldi	r19, 0x00	; 0
	for(i=0; i<8; i++ )
	{
		if(W0&0x01)
     f74:	60 ff       	sbrs	r22, 0
     f76:	02 c0       	rjmp	.+4      	; 0xf7c <AD9850_Setfrequency+0x24>
		{
			PORTC |= (1<<DATA);
     f78:	45 9a       	sbi	0x08, 5	; 8
     f7a:	01 c0       	rjmp	.+2      	; 0xf7e <AD9850_Setfrequency+0x26>
		}
		else
		{
			PORTC &= ~(1<<DATA);
     f7c:	45 98       	cbi	0x08, 5	; 8
		}
		PORTC |= (1<<WCLK);
     f7e:	44 9a       	sbi	0x08, 4	; 8
		PORTC &= ~(1<<WCLK);
     f80:	44 98       	cbi	0x08, 4	; 8
		W0 = W0>>1;
     f82:	66 95       	lsr	r22
     f84:	21 50       	subi	r18, 0x01	; 1
     f86:	31 09       	sbc	r19, r1
	uint32_t tuning_word = freq * x;
	PORTC &= ~(1<<FQUP);
	
	//write W0
	uint8_t W0 = tuning_word;
	for(i=0; i<8; i++ )
     f88:	a9 f7       	brne	.-22     	; 0xf74 <AD9850_Setfrequency+0x1c>
		PORTC &= ~(1<<WCLK);
		W0 = W0>>1;
	}
	
	//write W1
	uint8_t W1 = tuning_word>>8;
     f8a:	28 e0       	ldi	r18, 0x08	; 8
     f8c:	30 e0       	ldi	r19, 0x00	; 0
	for(i=0; i<8; i++ )
	{
		if(W1&0x01)
     f8e:	70 ff       	sbrs	r23, 0
     f90:	02 c0       	rjmp	.+4      	; 0xf96 <AD9850_Setfrequency+0x3e>
		{
			PORTC |= (1<<DATA);
     f92:	45 9a       	sbi	0x08, 5	; 8
     f94:	01 c0       	rjmp	.+2      	; 0xf98 <AD9850_Setfrequency+0x40>
		}
		else
		{
			PORTC &= ~(1<<DATA);
     f96:	45 98       	cbi	0x08, 5	; 8
		}
		PORTC |= (1<<WCLK);
     f98:	44 9a       	sbi	0x08, 4	; 8
		PORTC &= ~(1<<WCLK);
     f9a:	44 98       	cbi	0x08, 4	; 8
		W1 = W1>>1;
     f9c:	76 95       	lsr	r23
     f9e:	21 50       	subi	r18, 0x01	; 1
     fa0:	31 09       	sbc	r19, r1
		W0 = W0>>1;
	}
	
	//write W1
	uint8_t W1 = tuning_word>>8;
	for(i=0; i<8; i++ )
     fa2:	a9 f7       	brne	.-22     	; 0xf8e <AD9850_Setfrequency+0x36>
		PORTC &= ~(1<<WCLK);
		W1 = W1>>1;
	}
	
	//write W2
	uint8_t W2 = tuning_word>>16;
     fa4:	28 e0       	ldi	r18, 0x08	; 8
     fa6:	30 e0       	ldi	r19, 0x00	; 0
	for(i=0; i<8; i++ )
	{
		if(W2&0x01)
     fa8:	80 ff       	sbrs	r24, 0
     faa:	02 c0       	rjmp	.+4      	; 0xfb0 <AD9850_Setfrequency+0x58>
		{
			PORTC |= (1<<DATA);
     fac:	45 9a       	sbi	0x08, 5	; 8
     fae:	01 c0       	rjmp	.+2      	; 0xfb2 <AD9850_Setfrequency+0x5a>
		}
		else
		{
			PORTC &= ~(1<<DATA);
     fb0:	45 98       	cbi	0x08, 5	; 8
		}
		PORTC |= (1<<WCLK);
     fb2:	44 9a       	sbi	0x08, 4	; 8
		PORTC &= ~(1<<WCLK);
     fb4:	44 98       	cbi	0x08, 4	; 8
		W2 = W2>>2;
     fb6:	86 95       	lsr	r24
     fb8:	86 95       	lsr	r24
     fba:	21 50       	subi	r18, 0x01	; 1
     fbc:	31 09       	sbc	r19, r1
		W1 = W1>>1;
	}
	
	//write W2
	uint8_t W2 = tuning_word>>16;
	for(i=0; i<8; i++ )
     fbe:	a1 f7       	brne	.-24     	; 0xfa8 <AD9850_Setfrequency+0x50>
		PORTC &= ~(1<<WCLK);
		W2 = W2>>2;
	}
	
	//write W3
	uint8_t W3 = tuning_word>>24;
     fc0:	28 e0       	ldi	r18, 0x08	; 8
     fc2:	30 e0       	ldi	r19, 0x00	; 0
	for(i=0; i<8; i++ )
	{
		if(W3&0x01)
     fc4:	90 ff       	sbrs	r25, 0
     fc6:	02 c0       	rjmp	.+4      	; 0xfcc <AD9850_Setfrequency+0x74>
		{
			PORTC |= (1<<DATA);
     fc8:	45 9a       	sbi	0x08, 5	; 8
     fca:	01 c0       	rjmp	.+2      	; 0xfce <AD9850_Setfrequency+0x76>
		}
		else
		{
			PORTC &= ~(1<<DATA);
     fcc:	45 98       	cbi	0x08, 5	; 8
		}
		PORTC |= (1<<WCLK);
     fce:	44 9a       	sbi	0x08, 4	; 8
		PORTC &= ~(1<<WCLK);
     fd0:	44 98       	cbi	0x08, 4	; 8
		W3 = W3>>1;
     fd2:	96 95       	lsr	r25
     fd4:	21 50       	subi	r18, 0x01	; 1
     fd6:	31 09       	sbc	r19, r1
		W2 = W2>>2;
	}
	
	//write W3
	uint8_t W3 = tuning_word>>24;
	for(i=0; i<8; i++ )
     fd8:	a9 f7       	brne	.-22     	; 0xfc4 <AD9850_Setfrequency+0x6c>
     fda:	88 e0       	ldi	r24, 0x08	; 8
     fdc:	90 e0       	ldi	r25, 0x00	; 0
	
	//write W4
	uint8_t W4 = 0x00;
	for(i=0; i<8; i++ )
	{
		PORTC &= ~(1<<DATA);
     fde:	45 98       	cbi	0x08, 5	; 8
		PORTC |= (1<<WCLK);
     fe0:	44 9a       	sbi	0x08, 4	; 8
		PORTC &= ~(1<<WCLK);
     fe2:	44 98       	cbi	0x08, 4	; 8
     fe4:	01 97       	sbiw	r24, 0x01	; 1
		W3 = W3>>1;
	}
	
	//write W4
	uint8_t W4 = 0x00;
	for(i=0; i<8; i++ )
     fe6:	d9 f7       	brne	.-10     	; 0xfde <AD9850_Setfrequency+0x86>
		PORTC |= (1<<WCLK);
		PORTC &= ~(1<<WCLK);
		W4 = W4>>1;
	}
	
	PORTC |= (1<<FQUP);
     fe8:	43 9a       	sbi	0x08, 3	; 8
     fea:	8a e1       	ldi	r24, 0x1A	; 26
     fec:	8a 95       	dec	r24
     fee:	f1 f7       	brne	.-4      	; 0xfec <AD9850_Setfrequency+0x94>
     ff0:	00 c0       	rjmp	.+0      	; 0xff2 <AD9850_Setfrequency+0x9a>
	_delay_us(5);
	PORTC &= ~(1<<FQUP);
     ff2:	43 98       	cbi	0x08, 3	; 8
     ff4:	08 95       	ret

00000ff6 <frequence_display>:
}

void frequence_display()
{
     ff6:	cf 93       	push	r28
     ff8:	df 93       	push	r29
     ffa:	cd b7       	in	r28, 0x3d	; 61
     ffc:	de b7       	in	r29, 0x3e	; 62
     ffe:	a0 97       	sbiw	r28, 0x20	; 32
    1000:	0f b6       	in	r0, 0x3f	; 63
    1002:	f8 94       	cli
    1004:	de bf       	out	0x3e, r29	; 62
    1006:	0f be       	out	0x3f, r0	; 63
    1008:	cd bf       	out	0x3d, r28	; 61
	char getfrequency_buffer[32];
	LCD_Clear();
    100a:	f3 db       	rcall	.-2074   	; 0x7f2 <LCD_Clear>
	Backlight_LED(BL_BLUE_ON);
    100c:	80 e1       	ldi	r24, 0x10	; 16
    100e:	aa dc       	rcall	.-1708   	; 0x964 <Backlight_LED>
	// initialize adc and lcd
	
	LCD_GotoXY(0,0);
    1010:	60 e0       	ldi	r22, 0x00	; 0
    1012:	80 e0       	ldi	r24, 0x00	; 0
    1014:	6d dc       	rcall	.-1830   	; 0x8f0 <LCD_GotoXY>
	// display the labels on LCD
	LCD_PutString_P(PSTR("The Frequence ist   \r\n\n"));
    1016:	86 e9       	ldi	r24, 0x96	; 150
    1018:	96 e0       	ldi	r25, 0x06	; 6
    101a:	59 dc       	rcall	.-1870   	; 0x8ce <LCD_PutString_P>
	itoa(AD_freq/1000, getfrequency_buffer, 10);
    101c:	60 91 53 06 	lds	r22, 0x0653
    1020:	70 91 54 06 	lds	r23, 0x0654
    1024:	80 91 55 06 	lds	r24, 0x0655
    1028:	90 91 56 06 	lds	r25, 0x0656
    102c:	28 ee       	ldi	r18, 0xE8	; 232
    102e:	33 e0       	ldi	r19, 0x03	; 3
    1030:	40 e0       	ldi	r20, 0x00	; 0
    1032:	50 e0       	ldi	r21, 0x00	; 0
    1034:	3d d2       	rcall	.+1146   	; 0x14b0 <__udivmodsi4>
    1036:	da 01       	movw	r26, r20
    1038:	c9 01       	movw	r24, r18
    103a:	4a e0       	ldi	r20, 0x0A	; 10
    103c:	be 01       	movw	r22, r28
    103e:	6f 5f       	subi	r22, 0xFF	; 255
    1040:	7f 4f       	sbci	r23, 0xFF	; 255
    1042:	58 d2       	rcall	.+1200   	; 0x14f4 <__itoa_ncheck>
	LCD_PutString(getfrequency_buffer);
    1044:	ce 01       	movw	r24, r28
    1046:	01 96       	adiw	r24, 0x01	; 1
    1048:	34 dc       	rcall	.-1944   	; 0x8b2 <LCD_PutString>
	LCD_PutString_P(PSTR("      KHz"));
    104a:	8c e8       	ldi	r24, 0x8C	; 140
    104c:	96 e0       	ldi	r25, 0x06	; 6
    104e:	3f dc       	rcall	.-1922   	; 0x8ce <LCD_PutString_P>
	LCD_PutChar(0x10); 
    1050:	80 e1       	ldi	r24, 0x10	; 16
    1052:	e5 db       	rcall	.-2102   	; 0x81e <LCD_PutChar>
	LCD_Update();
    1054:	83 db       	rcall	.-2298   	; 0x75c <LCD_Update>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1056:	8f e3       	ldi	r24, 0x3F	; 63
    1058:	9c e9       	ldi	r25, 0x9C	; 156
    105a:	01 97       	sbiw	r24, 0x01	; 1
    105c:	f1 f7       	brne	.-4      	; 0x105a <frequence_display+0x64>
    105e:	00 c0       	rjmp	.+0      	; 0x1060 <frequence_display+0x6a>
    1060:	00 00       	nop
	_delay_ms(10);
}
    1062:	a0 96       	adiw	r28, 0x20	; 32
    1064:	0f b6       	in	r0, 0x3f	; 63
    1066:	f8 94       	cli
    1068:	de bf       	out	0x3e, r29	; 62
    106a:	0f be       	out	0x3f, r0	; 63
    106c:	cd bf       	out	0x3d, r28	; 61
    106e:	df 91       	pop	r29
    1070:	cf 91       	pop	r28
    1072:	08 95       	ret

00001074 <main>:


int main(void)
{
	// set PA3-PA7 as input and activated internal Pull-Up
	DDRA &= ~((1<<PINA3)|(1<<PINA4)|(1<<PINA5)|(1<<PINA6)|(1<<PINA7));		// Required for DMM Board 2013
    1074:	81 b1       	in	r24, 0x01	; 1
    1076:	87 70       	andi	r24, 0x07	; 7
    1078:	81 b9       	out	0x01, r24	; 1
	PORTA |= ((1<<PINA3)|(1<<PINA4)|(1<<PINA5)|(1<<PINA6)|(1<<PINA7));		// Required for DMM Board 2013
    107a:	82 b1       	in	r24, 0x02	; 2
    107c:	88 6f       	ori	r24, 0xF8	; 248
    107e:	82 b9       	out	0x02, r24	; 2
	
	// set PB0-PB3 as output
	DDRB = 0x0F;
    1080:	8f e0       	ldi	r24, 0x0F	; 15
    1082:	84 b9       	out	0x04, r24	; 4
	// set PB0-PB3 on high-level
	PORTB |= 0x0F;		// Required for DMM Board DMM Board 2013
    1084:	85 b1       	in	r24, 0x05	; 5
    1086:	8f 60       	ori	r24, 0x0F	; 15
    1088:	85 b9       	out	0x05, r24	; 5
	
	//void(*get_frequence_p)(void) = get_frequence;			//define a function pointer, point to function get_frequence

	LCD_Init();
    108a:	48 dc       	rcall	.-1904   	; 0x91c <LCD_Init>
    uart_init0();
    108c:	60 de       	rcall	.-832    	; 0xd4e <uart_init0>
	start ();
    108e:	7f de       	rcall	.-770    	; 0xd8e <start>
	
	AD9850_setup();
    1090:	a6 de       	rcall	.-692    	; 0xdde <AD9850_setup>
	AD9850_reset();
    1092:	ac de       	rcall	.-680    	; 0xdec <AD9850_reset>

	
	
	for(;;)
	{
		if(~PINA&(1<<PINA7))
    1094:	07 99       	sbic	0x00, 7	; 0
    1096:	14 c0       	rjmp	.+40     	; 0x10c0 <main+0x4c>
			AD_freq +=1000000;
    1098:	80 91 53 06 	lds	r24, 0x0653
    109c:	90 91 54 06 	lds	r25, 0x0654
    10a0:	a0 91 55 06 	lds	r26, 0x0655
    10a4:	b0 91 56 06 	lds	r27, 0x0656
    10a8:	80 5c       	subi	r24, 0xC0	; 192
    10aa:	9d 4b       	sbci	r25, 0xBD	; 189
    10ac:	a0 4f       	sbci	r26, 0xF0	; 240
    10ae:	bf 4f       	sbci	r27, 0xFF	; 255
    10b0:	80 93 53 06 	sts	0x0653, r24
    10b4:	90 93 54 06 	sts	0x0654, r25
    10b8:	a0 93 55 06 	sts	0x0655, r26
    10bc:	b0 93 56 06 	sts	0x0656, r27
    10c0:	2f ef       	ldi	r18, 0xFF	; 255
    10c2:	81 ee       	ldi	r24, 0xE1	; 225
    10c4:	94 e0       	ldi	r25, 0x04	; 4
    10c6:	21 50       	subi	r18, 0x01	; 1
    10c8:	80 40       	sbci	r24, 0x00	; 0
    10ca:	90 40       	sbci	r25, 0x00	; 0
    10cc:	e1 f7       	brne	.-8      	; 0x10c6 <main+0x52>
    10ce:	00 c0       	rjmp	.+0      	; 0x10d0 <main+0x5c>
    10d0:	00 00       	nop
			_delay_ms(100);
		
		if (~PINA&(1<<PINA6))
    10d2:	06 99       	sbic	0x00, 6	; 0
    10d4:	14 c0       	rjmp	.+40     	; 0x10fe <main+0x8a>
			AD_freq -=1000000;
    10d6:	80 91 53 06 	lds	r24, 0x0653
    10da:	90 91 54 06 	lds	r25, 0x0654
    10de:	a0 91 55 06 	lds	r26, 0x0655
    10e2:	b0 91 56 06 	lds	r27, 0x0656
    10e6:	80 54       	subi	r24, 0x40	; 64
    10e8:	92 44       	sbci	r25, 0x42	; 66
    10ea:	af 40       	sbci	r26, 0x0F	; 15
    10ec:	b1 09       	sbc	r27, r1
    10ee:	80 93 53 06 	sts	0x0653, r24
    10f2:	90 93 54 06 	sts	0x0654, r25
    10f6:	a0 93 55 06 	sts	0x0655, r26
    10fa:	b0 93 56 06 	sts	0x0656, r27
    10fe:	2f ef       	ldi	r18, 0xFF	; 255
    1100:	81 ee       	ldi	r24, 0xE1	; 225
    1102:	94 e0       	ldi	r25, 0x04	; 4
    1104:	21 50       	subi	r18, 0x01	; 1
    1106:	80 40       	sbci	r24, 0x00	; 0
    1108:	90 40       	sbci	r25, 0x00	; 0
    110a:	e1 f7       	brne	.-8      	; 0x1104 <main+0x90>
    110c:	00 c0       	rjmp	.+0      	; 0x110e <main+0x9a>
    110e:	00 00       	nop
			_delay_ms(100);
		
		if (~PINA&(1<<PINA5))
    1110:	05 99       	sbic	0x00, 5	; 0
    1112:	14 c0       	rjmp	.+40     	; 0x113c <main+0xc8>
			AD_freq -=100000;
    1114:	80 91 53 06 	lds	r24, 0x0653
    1118:	90 91 54 06 	lds	r25, 0x0654
    111c:	a0 91 55 06 	lds	r26, 0x0655
    1120:	b0 91 56 06 	lds	r27, 0x0656
    1124:	80 5a       	subi	r24, 0xA0	; 160
    1126:	96 48       	sbci	r25, 0x86	; 134
    1128:	a1 40       	sbci	r26, 0x01	; 1
    112a:	b1 09       	sbc	r27, r1
    112c:	80 93 53 06 	sts	0x0653, r24
    1130:	90 93 54 06 	sts	0x0654, r25
    1134:	a0 93 55 06 	sts	0x0655, r26
    1138:	b0 93 56 06 	sts	0x0656, r27
    113c:	2f ef       	ldi	r18, 0xFF	; 255
    113e:	89 ef       	ldi	r24, 0xF9	; 249
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	21 50       	subi	r18, 0x01	; 1
    1144:	80 40       	sbci	r24, 0x00	; 0
    1146:	90 40       	sbci	r25, 0x00	; 0
    1148:	e1 f7       	brne	.-8      	; 0x1142 <main+0xce>
    114a:	00 c0       	rjmp	.+0      	; 0x114c <main+0xd8>
    114c:	00 00       	nop
			_delay_ms(20);
			
		if (~PINA&(1<<PINA4))
    114e:	04 99       	sbic	0x00, 4	; 0
    1150:	14 c0       	rjmp	.+40     	; 0x117a <main+0x106>
			AD_freq +=100000;
    1152:	80 91 53 06 	lds	r24, 0x0653
    1156:	90 91 54 06 	lds	r25, 0x0654
    115a:	a0 91 55 06 	lds	r26, 0x0655
    115e:	b0 91 56 06 	lds	r27, 0x0656
    1162:	80 56       	subi	r24, 0x60	; 96
    1164:	99 47       	sbci	r25, 0x79	; 121
    1166:	ae 4f       	sbci	r26, 0xFE	; 254
    1168:	bf 4f       	sbci	r27, 0xFF	; 255
    116a:	80 93 53 06 	sts	0x0653, r24
    116e:	90 93 54 06 	sts	0x0654, r25
    1172:	a0 93 55 06 	sts	0x0655, r26
    1176:	b0 93 56 06 	sts	0x0656, r27
    117a:	2f ef       	ldi	r18, 0xFF	; 255
    117c:	81 ee       	ldi	r24, 0xE1	; 225
    117e:	94 e0       	ldi	r25, 0x04	; 4
    1180:	21 50       	subi	r18, 0x01	; 1
    1182:	80 40       	sbci	r24, 0x00	; 0
    1184:	90 40       	sbci	r25, 0x00	; 0
    1186:	e1 f7       	brne	.-8      	; 0x1180 <main+0x10c>
    1188:	00 c0       	rjmp	.+0      	; 0x118a <main+0x116>
    118a:	00 00       	nop
			_delay_ms(100);

		//if (~PINA&(1<<PINA4))
			//(*get_frequence_p)();		//when Joystick Button is pressed, get the frequence from serial port again
		get_frequence();
    118c:	61 de       	rcall	.-830    	; 0xe50 <get_frequence>
		AD9850_Setfrequency(AD_freq);
    118e:	60 91 53 06 	lds	r22, 0x0653
    1192:	70 91 54 06 	lds	r23, 0x0654
    1196:	80 91 55 06 	lds	r24, 0x0655
    119a:	90 91 56 06 	lds	r25, 0x0656
    119e:	97 d0       	rcall	.+302    	; 0x12ce <__floatunsisf>
    11a0:	db de       	rcall	.-586    	; 0xf58 <AD9850_Setfrequency>
		frequence_display();
    11a2:	29 df       	rcall	.-430    	; 0xff6 <frequence_display>
	}
    11a4:	77 cf       	rjmp	.-274    	; 0x1094 <main+0x20>

000011a6 <__divsf3>:
    11a6:	0c d0       	rcall	.+24     	; 0x11c0 <__divsf3x>
    11a8:	e6 c0       	rjmp	.+460    	; 0x1376 <__fp_round>
    11aa:	de d0       	rcall	.+444    	; 0x1368 <__fp_pscB>
    11ac:	40 f0       	brcs	.+16     	; 0x11be <__divsf3+0x18>
    11ae:	d5 d0       	rcall	.+426    	; 0x135a <__fp_pscA>
    11b0:	30 f0       	brcs	.+12     	; 0x11be <__divsf3+0x18>
    11b2:	21 f4       	brne	.+8      	; 0x11bc <__divsf3+0x16>
    11b4:	5f 3f       	cpi	r21, 0xFF	; 255
    11b6:	19 f0       	breq	.+6      	; 0x11be <__divsf3+0x18>
    11b8:	c7 c0       	rjmp	.+398    	; 0x1348 <__fp_inf>
    11ba:	51 11       	cpse	r21, r1
    11bc:	10 c1       	rjmp	.+544    	; 0x13de <__fp_szero>
    11be:	ca c0       	rjmp	.+404    	; 0x1354 <__fp_nan>

000011c0 <__divsf3x>:
    11c0:	eb d0       	rcall	.+470    	; 0x1398 <__fp_split3>
    11c2:	98 f3       	brcs	.-26     	; 0x11aa <__divsf3+0x4>

000011c4 <__divsf3_pse>:
    11c4:	99 23       	and	r25, r25
    11c6:	c9 f3       	breq	.-14     	; 0x11ba <__divsf3+0x14>
    11c8:	55 23       	and	r21, r21
    11ca:	b1 f3       	breq	.-20     	; 0x11b8 <__divsf3+0x12>
    11cc:	95 1b       	sub	r25, r21
    11ce:	55 0b       	sbc	r21, r21
    11d0:	bb 27       	eor	r27, r27
    11d2:	aa 27       	eor	r26, r26
    11d4:	62 17       	cp	r22, r18
    11d6:	73 07       	cpc	r23, r19
    11d8:	84 07       	cpc	r24, r20
    11da:	38 f0       	brcs	.+14     	; 0x11ea <__divsf3_pse+0x26>
    11dc:	9f 5f       	subi	r25, 0xFF	; 255
    11de:	5f 4f       	sbci	r21, 0xFF	; 255
    11e0:	22 0f       	add	r18, r18
    11e2:	33 1f       	adc	r19, r19
    11e4:	44 1f       	adc	r20, r20
    11e6:	aa 1f       	adc	r26, r26
    11e8:	a9 f3       	breq	.-22     	; 0x11d4 <__divsf3_pse+0x10>
    11ea:	33 d0       	rcall	.+102    	; 0x1252 <__divsf3_pse+0x8e>
    11ec:	0e 2e       	mov	r0, r30
    11ee:	3a f0       	brmi	.+14     	; 0x11fe <__divsf3_pse+0x3a>
    11f0:	e0 e8       	ldi	r30, 0x80	; 128
    11f2:	30 d0       	rcall	.+96     	; 0x1254 <__divsf3_pse+0x90>
    11f4:	91 50       	subi	r25, 0x01	; 1
    11f6:	50 40       	sbci	r21, 0x00	; 0
    11f8:	e6 95       	lsr	r30
    11fa:	00 1c       	adc	r0, r0
    11fc:	ca f7       	brpl	.-14     	; 0x11f0 <__divsf3_pse+0x2c>
    11fe:	29 d0       	rcall	.+82     	; 0x1252 <__divsf3_pse+0x8e>
    1200:	fe 2f       	mov	r31, r30
    1202:	27 d0       	rcall	.+78     	; 0x1252 <__divsf3_pse+0x8e>
    1204:	66 0f       	add	r22, r22
    1206:	77 1f       	adc	r23, r23
    1208:	88 1f       	adc	r24, r24
    120a:	bb 1f       	adc	r27, r27
    120c:	26 17       	cp	r18, r22
    120e:	37 07       	cpc	r19, r23
    1210:	48 07       	cpc	r20, r24
    1212:	ab 07       	cpc	r26, r27
    1214:	b0 e8       	ldi	r27, 0x80	; 128
    1216:	09 f0       	breq	.+2      	; 0x121a <__divsf3_pse+0x56>
    1218:	bb 0b       	sbc	r27, r27
    121a:	80 2d       	mov	r24, r0
    121c:	bf 01       	movw	r22, r30
    121e:	ff 27       	eor	r31, r31
    1220:	93 58       	subi	r25, 0x83	; 131
    1222:	5f 4f       	sbci	r21, 0xFF	; 255
    1224:	2a f0       	brmi	.+10     	; 0x1230 <__divsf3_pse+0x6c>
    1226:	9e 3f       	cpi	r25, 0xFE	; 254
    1228:	51 05       	cpc	r21, r1
    122a:	68 f0       	brcs	.+26     	; 0x1246 <__divsf3_pse+0x82>
    122c:	8d c0       	rjmp	.+282    	; 0x1348 <__fp_inf>
    122e:	d7 c0       	rjmp	.+430    	; 0x13de <__fp_szero>
    1230:	5f 3f       	cpi	r21, 0xFF	; 255
    1232:	ec f3       	brlt	.-6      	; 0x122e <__divsf3_pse+0x6a>
    1234:	98 3e       	cpi	r25, 0xE8	; 232
    1236:	dc f3       	brlt	.-10     	; 0x122e <__divsf3_pse+0x6a>
    1238:	86 95       	lsr	r24
    123a:	77 95       	ror	r23
    123c:	67 95       	ror	r22
    123e:	b7 95       	ror	r27
    1240:	f7 95       	ror	r31
    1242:	9f 5f       	subi	r25, 0xFF	; 255
    1244:	c9 f7       	brne	.-14     	; 0x1238 <__divsf3_pse+0x74>
    1246:	88 0f       	add	r24, r24
    1248:	91 1d       	adc	r25, r1
    124a:	96 95       	lsr	r25
    124c:	87 95       	ror	r24
    124e:	97 f9       	bld	r25, 7
    1250:	08 95       	ret
    1252:	e1 e0       	ldi	r30, 0x01	; 1
    1254:	66 0f       	add	r22, r22
    1256:	77 1f       	adc	r23, r23
    1258:	88 1f       	adc	r24, r24
    125a:	bb 1f       	adc	r27, r27
    125c:	62 17       	cp	r22, r18
    125e:	73 07       	cpc	r23, r19
    1260:	84 07       	cpc	r24, r20
    1262:	ba 07       	cpc	r27, r26
    1264:	20 f0       	brcs	.+8      	; 0x126e <__divsf3_pse+0xaa>
    1266:	62 1b       	sub	r22, r18
    1268:	73 0b       	sbc	r23, r19
    126a:	84 0b       	sbc	r24, r20
    126c:	ba 0b       	sbc	r27, r26
    126e:	ee 1f       	adc	r30, r30
    1270:	88 f7       	brcc	.-30     	; 0x1254 <__divsf3_pse+0x90>
    1272:	e0 95       	com	r30
    1274:	08 95       	ret

00001276 <__fixunssfsi>:
    1276:	98 d0       	rcall	.+304    	; 0x13a8 <__fp_splitA>
    1278:	88 f0       	brcs	.+34     	; 0x129c <__fixunssfsi+0x26>
    127a:	9f 57       	subi	r25, 0x7F	; 127
    127c:	90 f0       	brcs	.+36     	; 0x12a2 <__fixunssfsi+0x2c>
    127e:	b9 2f       	mov	r27, r25
    1280:	99 27       	eor	r25, r25
    1282:	b7 51       	subi	r27, 0x17	; 23
    1284:	a0 f0       	brcs	.+40     	; 0x12ae <__fixunssfsi+0x38>
    1286:	d1 f0       	breq	.+52     	; 0x12bc <__fixunssfsi+0x46>
    1288:	66 0f       	add	r22, r22
    128a:	77 1f       	adc	r23, r23
    128c:	88 1f       	adc	r24, r24
    128e:	99 1f       	adc	r25, r25
    1290:	1a f0       	brmi	.+6      	; 0x1298 <__fixunssfsi+0x22>
    1292:	ba 95       	dec	r27
    1294:	c9 f7       	brne	.-14     	; 0x1288 <__fixunssfsi+0x12>
    1296:	12 c0       	rjmp	.+36     	; 0x12bc <__fixunssfsi+0x46>
    1298:	b1 30       	cpi	r27, 0x01	; 1
    129a:	81 f0       	breq	.+32     	; 0x12bc <__fixunssfsi+0x46>
    129c:	9f d0       	rcall	.+318    	; 0x13dc <__fp_zero>
    129e:	b1 e0       	ldi	r27, 0x01	; 1
    12a0:	08 95       	ret
    12a2:	9c c0       	rjmp	.+312    	; 0x13dc <__fp_zero>
    12a4:	67 2f       	mov	r22, r23
    12a6:	78 2f       	mov	r23, r24
    12a8:	88 27       	eor	r24, r24
    12aa:	b8 5f       	subi	r27, 0xF8	; 248
    12ac:	39 f0       	breq	.+14     	; 0x12bc <__fixunssfsi+0x46>
    12ae:	b9 3f       	cpi	r27, 0xF9	; 249
    12b0:	cc f3       	brlt	.-14     	; 0x12a4 <__fixunssfsi+0x2e>
    12b2:	86 95       	lsr	r24
    12b4:	77 95       	ror	r23
    12b6:	67 95       	ror	r22
    12b8:	b3 95       	inc	r27
    12ba:	d9 f7       	brne	.-10     	; 0x12b2 <__fixunssfsi+0x3c>
    12bc:	3e f4       	brtc	.+14     	; 0x12cc <__fixunssfsi+0x56>
    12be:	90 95       	com	r25
    12c0:	80 95       	com	r24
    12c2:	70 95       	com	r23
    12c4:	61 95       	neg	r22
    12c6:	7f 4f       	sbci	r23, 0xFF	; 255
    12c8:	8f 4f       	sbci	r24, 0xFF	; 255
    12ca:	9f 4f       	sbci	r25, 0xFF	; 255
    12cc:	08 95       	ret

000012ce <__floatunsisf>:
    12ce:	e8 94       	clt
    12d0:	09 c0       	rjmp	.+18     	; 0x12e4 <__floatsisf+0x12>

000012d2 <__floatsisf>:
    12d2:	97 fb       	bst	r25, 7
    12d4:	3e f4       	brtc	.+14     	; 0x12e4 <__floatsisf+0x12>
    12d6:	90 95       	com	r25
    12d8:	80 95       	com	r24
    12da:	70 95       	com	r23
    12dc:	61 95       	neg	r22
    12de:	7f 4f       	sbci	r23, 0xFF	; 255
    12e0:	8f 4f       	sbci	r24, 0xFF	; 255
    12e2:	9f 4f       	sbci	r25, 0xFF	; 255
    12e4:	99 23       	and	r25, r25
    12e6:	a9 f0       	breq	.+42     	; 0x1312 <__floatsisf+0x40>
    12e8:	f9 2f       	mov	r31, r25
    12ea:	96 e9       	ldi	r25, 0x96	; 150
    12ec:	bb 27       	eor	r27, r27
    12ee:	93 95       	inc	r25
    12f0:	f6 95       	lsr	r31
    12f2:	87 95       	ror	r24
    12f4:	77 95       	ror	r23
    12f6:	67 95       	ror	r22
    12f8:	b7 95       	ror	r27
    12fa:	f1 11       	cpse	r31, r1
    12fc:	f8 cf       	rjmp	.-16     	; 0x12ee <__floatsisf+0x1c>
    12fe:	fa f4       	brpl	.+62     	; 0x133e <__floatsisf+0x6c>
    1300:	bb 0f       	add	r27, r27
    1302:	11 f4       	brne	.+4      	; 0x1308 <__floatsisf+0x36>
    1304:	60 ff       	sbrs	r22, 0
    1306:	1b c0       	rjmp	.+54     	; 0x133e <__floatsisf+0x6c>
    1308:	6f 5f       	subi	r22, 0xFF	; 255
    130a:	7f 4f       	sbci	r23, 0xFF	; 255
    130c:	8f 4f       	sbci	r24, 0xFF	; 255
    130e:	9f 4f       	sbci	r25, 0xFF	; 255
    1310:	16 c0       	rjmp	.+44     	; 0x133e <__floatsisf+0x6c>
    1312:	88 23       	and	r24, r24
    1314:	11 f0       	breq	.+4      	; 0x131a <__floatsisf+0x48>
    1316:	96 e9       	ldi	r25, 0x96	; 150
    1318:	11 c0       	rjmp	.+34     	; 0x133c <__floatsisf+0x6a>
    131a:	77 23       	and	r23, r23
    131c:	21 f0       	breq	.+8      	; 0x1326 <__floatsisf+0x54>
    131e:	9e e8       	ldi	r25, 0x8E	; 142
    1320:	87 2f       	mov	r24, r23
    1322:	76 2f       	mov	r23, r22
    1324:	05 c0       	rjmp	.+10     	; 0x1330 <__floatsisf+0x5e>
    1326:	66 23       	and	r22, r22
    1328:	71 f0       	breq	.+28     	; 0x1346 <__floatsisf+0x74>
    132a:	96 e8       	ldi	r25, 0x86	; 134
    132c:	86 2f       	mov	r24, r22
    132e:	70 e0       	ldi	r23, 0x00	; 0
    1330:	60 e0       	ldi	r22, 0x00	; 0
    1332:	2a f0       	brmi	.+10     	; 0x133e <__floatsisf+0x6c>
    1334:	9a 95       	dec	r25
    1336:	66 0f       	add	r22, r22
    1338:	77 1f       	adc	r23, r23
    133a:	88 1f       	adc	r24, r24
    133c:	da f7       	brpl	.-10     	; 0x1334 <__floatsisf+0x62>
    133e:	88 0f       	add	r24, r24
    1340:	96 95       	lsr	r25
    1342:	87 95       	ror	r24
    1344:	97 f9       	bld	r25, 7
    1346:	08 95       	ret

00001348 <__fp_inf>:
    1348:	97 f9       	bld	r25, 7
    134a:	9f 67       	ori	r25, 0x7F	; 127
    134c:	80 e8       	ldi	r24, 0x80	; 128
    134e:	70 e0       	ldi	r23, 0x00	; 0
    1350:	60 e0       	ldi	r22, 0x00	; 0
    1352:	08 95       	ret

00001354 <__fp_nan>:
    1354:	9f ef       	ldi	r25, 0xFF	; 255
    1356:	80 ec       	ldi	r24, 0xC0	; 192
    1358:	08 95       	ret

0000135a <__fp_pscA>:
    135a:	00 24       	eor	r0, r0
    135c:	0a 94       	dec	r0
    135e:	16 16       	cp	r1, r22
    1360:	17 06       	cpc	r1, r23
    1362:	18 06       	cpc	r1, r24
    1364:	09 06       	cpc	r0, r25
    1366:	08 95       	ret

00001368 <__fp_pscB>:
    1368:	00 24       	eor	r0, r0
    136a:	0a 94       	dec	r0
    136c:	12 16       	cp	r1, r18
    136e:	13 06       	cpc	r1, r19
    1370:	14 06       	cpc	r1, r20
    1372:	05 06       	cpc	r0, r21
    1374:	08 95       	ret

00001376 <__fp_round>:
    1376:	09 2e       	mov	r0, r25
    1378:	03 94       	inc	r0
    137a:	00 0c       	add	r0, r0
    137c:	11 f4       	brne	.+4      	; 0x1382 <__fp_round+0xc>
    137e:	88 23       	and	r24, r24
    1380:	52 f0       	brmi	.+20     	; 0x1396 <__fp_round+0x20>
    1382:	bb 0f       	add	r27, r27
    1384:	40 f4       	brcc	.+16     	; 0x1396 <__fp_round+0x20>
    1386:	bf 2b       	or	r27, r31
    1388:	11 f4       	brne	.+4      	; 0x138e <__fp_round+0x18>
    138a:	60 ff       	sbrs	r22, 0
    138c:	04 c0       	rjmp	.+8      	; 0x1396 <__fp_round+0x20>
    138e:	6f 5f       	subi	r22, 0xFF	; 255
    1390:	7f 4f       	sbci	r23, 0xFF	; 255
    1392:	8f 4f       	sbci	r24, 0xFF	; 255
    1394:	9f 4f       	sbci	r25, 0xFF	; 255
    1396:	08 95       	ret

00001398 <__fp_split3>:
    1398:	57 fd       	sbrc	r21, 7
    139a:	90 58       	subi	r25, 0x80	; 128
    139c:	44 0f       	add	r20, r20
    139e:	55 1f       	adc	r21, r21
    13a0:	59 f0       	breq	.+22     	; 0x13b8 <__fp_splitA+0x10>
    13a2:	5f 3f       	cpi	r21, 0xFF	; 255
    13a4:	71 f0       	breq	.+28     	; 0x13c2 <__fp_splitA+0x1a>
    13a6:	47 95       	ror	r20

000013a8 <__fp_splitA>:
    13a8:	88 0f       	add	r24, r24
    13aa:	97 fb       	bst	r25, 7
    13ac:	99 1f       	adc	r25, r25
    13ae:	61 f0       	breq	.+24     	; 0x13c8 <__fp_splitA+0x20>
    13b0:	9f 3f       	cpi	r25, 0xFF	; 255
    13b2:	79 f0       	breq	.+30     	; 0x13d2 <__fp_splitA+0x2a>
    13b4:	87 95       	ror	r24
    13b6:	08 95       	ret
    13b8:	12 16       	cp	r1, r18
    13ba:	13 06       	cpc	r1, r19
    13bc:	14 06       	cpc	r1, r20
    13be:	55 1f       	adc	r21, r21
    13c0:	f2 cf       	rjmp	.-28     	; 0x13a6 <__fp_split3+0xe>
    13c2:	46 95       	lsr	r20
    13c4:	f1 df       	rcall	.-30     	; 0x13a8 <__fp_splitA>
    13c6:	08 c0       	rjmp	.+16     	; 0x13d8 <__fp_splitA+0x30>
    13c8:	16 16       	cp	r1, r22
    13ca:	17 06       	cpc	r1, r23
    13cc:	18 06       	cpc	r1, r24
    13ce:	99 1f       	adc	r25, r25
    13d0:	f1 cf       	rjmp	.-30     	; 0x13b4 <__fp_splitA+0xc>
    13d2:	86 95       	lsr	r24
    13d4:	71 05       	cpc	r23, r1
    13d6:	61 05       	cpc	r22, r1
    13d8:	08 94       	sec
    13da:	08 95       	ret

000013dc <__fp_zero>:
    13dc:	e8 94       	clt

000013de <__fp_szero>:
    13de:	bb 27       	eor	r27, r27
    13e0:	66 27       	eor	r22, r22
    13e2:	77 27       	eor	r23, r23
    13e4:	cb 01       	movw	r24, r22
    13e6:	97 f9       	bld	r25, 7
    13e8:	08 95       	ret

000013ea <__mulsf3>:
    13ea:	0b d0       	rcall	.+22     	; 0x1402 <__mulsf3x>
    13ec:	c4 cf       	rjmp	.-120    	; 0x1376 <__fp_round>
    13ee:	b5 df       	rcall	.-150    	; 0x135a <__fp_pscA>
    13f0:	28 f0       	brcs	.+10     	; 0x13fc <__mulsf3+0x12>
    13f2:	ba df       	rcall	.-140    	; 0x1368 <__fp_pscB>
    13f4:	18 f0       	brcs	.+6      	; 0x13fc <__mulsf3+0x12>
    13f6:	95 23       	and	r25, r21
    13f8:	09 f0       	breq	.+2      	; 0x13fc <__mulsf3+0x12>
    13fa:	a6 cf       	rjmp	.-180    	; 0x1348 <__fp_inf>
    13fc:	ab cf       	rjmp	.-170    	; 0x1354 <__fp_nan>
    13fe:	11 24       	eor	r1, r1
    1400:	ee cf       	rjmp	.-36     	; 0x13de <__fp_szero>

00001402 <__mulsf3x>:
    1402:	ca df       	rcall	.-108    	; 0x1398 <__fp_split3>
    1404:	a0 f3       	brcs	.-24     	; 0x13ee <__mulsf3+0x4>

00001406 <__mulsf3_pse>:
    1406:	95 9f       	mul	r25, r21
    1408:	d1 f3       	breq	.-12     	; 0x13fe <__mulsf3+0x14>
    140a:	95 0f       	add	r25, r21
    140c:	50 e0       	ldi	r21, 0x00	; 0
    140e:	55 1f       	adc	r21, r21
    1410:	62 9f       	mul	r22, r18
    1412:	f0 01       	movw	r30, r0
    1414:	72 9f       	mul	r23, r18
    1416:	bb 27       	eor	r27, r27
    1418:	f0 0d       	add	r31, r0
    141a:	b1 1d       	adc	r27, r1
    141c:	63 9f       	mul	r22, r19
    141e:	aa 27       	eor	r26, r26
    1420:	f0 0d       	add	r31, r0
    1422:	b1 1d       	adc	r27, r1
    1424:	aa 1f       	adc	r26, r26
    1426:	64 9f       	mul	r22, r20
    1428:	66 27       	eor	r22, r22
    142a:	b0 0d       	add	r27, r0
    142c:	a1 1d       	adc	r26, r1
    142e:	66 1f       	adc	r22, r22
    1430:	82 9f       	mul	r24, r18
    1432:	22 27       	eor	r18, r18
    1434:	b0 0d       	add	r27, r0
    1436:	a1 1d       	adc	r26, r1
    1438:	62 1f       	adc	r22, r18
    143a:	73 9f       	mul	r23, r19
    143c:	b0 0d       	add	r27, r0
    143e:	a1 1d       	adc	r26, r1
    1440:	62 1f       	adc	r22, r18
    1442:	83 9f       	mul	r24, r19
    1444:	a0 0d       	add	r26, r0
    1446:	61 1d       	adc	r22, r1
    1448:	22 1f       	adc	r18, r18
    144a:	74 9f       	mul	r23, r20
    144c:	33 27       	eor	r19, r19
    144e:	a0 0d       	add	r26, r0
    1450:	61 1d       	adc	r22, r1
    1452:	23 1f       	adc	r18, r19
    1454:	84 9f       	mul	r24, r20
    1456:	60 0d       	add	r22, r0
    1458:	21 1d       	adc	r18, r1
    145a:	82 2f       	mov	r24, r18
    145c:	76 2f       	mov	r23, r22
    145e:	6a 2f       	mov	r22, r26
    1460:	11 24       	eor	r1, r1
    1462:	9f 57       	subi	r25, 0x7F	; 127
    1464:	50 40       	sbci	r21, 0x00	; 0
    1466:	8a f0       	brmi	.+34     	; 0x148a <__mulsf3_pse+0x84>
    1468:	e1 f0       	breq	.+56     	; 0x14a2 <__mulsf3_pse+0x9c>
    146a:	88 23       	and	r24, r24
    146c:	4a f0       	brmi	.+18     	; 0x1480 <__mulsf3_pse+0x7a>
    146e:	ee 0f       	add	r30, r30
    1470:	ff 1f       	adc	r31, r31
    1472:	bb 1f       	adc	r27, r27
    1474:	66 1f       	adc	r22, r22
    1476:	77 1f       	adc	r23, r23
    1478:	88 1f       	adc	r24, r24
    147a:	91 50       	subi	r25, 0x01	; 1
    147c:	50 40       	sbci	r21, 0x00	; 0
    147e:	a9 f7       	brne	.-22     	; 0x146a <__mulsf3_pse+0x64>
    1480:	9e 3f       	cpi	r25, 0xFE	; 254
    1482:	51 05       	cpc	r21, r1
    1484:	70 f0       	brcs	.+28     	; 0x14a2 <__mulsf3_pse+0x9c>
    1486:	60 cf       	rjmp	.-320    	; 0x1348 <__fp_inf>
    1488:	aa cf       	rjmp	.-172    	; 0x13de <__fp_szero>
    148a:	5f 3f       	cpi	r21, 0xFF	; 255
    148c:	ec f3       	brlt	.-6      	; 0x1488 <__mulsf3_pse+0x82>
    148e:	98 3e       	cpi	r25, 0xE8	; 232
    1490:	dc f3       	brlt	.-10     	; 0x1488 <__mulsf3_pse+0x82>
    1492:	86 95       	lsr	r24
    1494:	77 95       	ror	r23
    1496:	67 95       	ror	r22
    1498:	b7 95       	ror	r27
    149a:	f7 95       	ror	r31
    149c:	e7 95       	ror	r30
    149e:	9f 5f       	subi	r25, 0xFF	; 255
    14a0:	c1 f7       	brne	.-16     	; 0x1492 <__mulsf3_pse+0x8c>
    14a2:	fe 2b       	or	r31, r30
    14a4:	88 0f       	add	r24, r24
    14a6:	91 1d       	adc	r25, r1
    14a8:	96 95       	lsr	r25
    14aa:	87 95       	ror	r24
    14ac:	97 f9       	bld	r25, 7
    14ae:	08 95       	ret

000014b0 <__udivmodsi4>:
    14b0:	a1 e2       	ldi	r26, 0x21	; 33
    14b2:	1a 2e       	mov	r1, r26
    14b4:	aa 1b       	sub	r26, r26
    14b6:	bb 1b       	sub	r27, r27
    14b8:	fd 01       	movw	r30, r26
    14ba:	0d c0       	rjmp	.+26     	; 0x14d6 <__udivmodsi4_ep>

000014bc <__udivmodsi4_loop>:
    14bc:	aa 1f       	adc	r26, r26
    14be:	bb 1f       	adc	r27, r27
    14c0:	ee 1f       	adc	r30, r30
    14c2:	ff 1f       	adc	r31, r31
    14c4:	a2 17       	cp	r26, r18
    14c6:	b3 07       	cpc	r27, r19
    14c8:	e4 07       	cpc	r30, r20
    14ca:	f5 07       	cpc	r31, r21
    14cc:	20 f0       	brcs	.+8      	; 0x14d6 <__udivmodsi4_ep>
    14ce:	a2 1b       	sub	r26, r18
    14d0:	b3 0b       	sbc	r27, r19
    14d2:	e4 0b       	sbc	r30, r20
    14d4:	f5 0b       	sbc	r31, r21

000014d6 <__udivmodsi4_ep>:
    14d6:	66 1f       	adc	r22, r22
    14d8:	77 1f       	adc	r23, r23
    14da:	88 1f       	adc	r24, r24
    14dc:	99 1f       	adc	r25, r25
    14de:	1a 94       	dec	r1
    14e0:	69 f7       	brne	.-38     	; 0x14bc <__udivmodsi4_loop>
    14e2:	60 95       	com	r22
    14e4:	70 95       	com	r23
    14e6:	80 95       	com	r24
    14e8:	90 95       	com	r25
    14ea:	9b 01       	movw	r18, r22
    14ec:	ac 01       	movw	r20, r24
    14ee:	bd 01       	movw	r22, r26
    14f0:	cf 01       	movw	r24, r30
    14f2:	08 95       	ret

000014f4 <__itoa_ncheck>:
    14f4:	bb 27       	eor	r27, r27
    14f6:	4a 30       	cpi	r20, 0x0A	; 10
    14f8:	31 f4       	brne	.+12     	; 0x1506 <__itoa_ncheck+0x12>
    14fa:	99 23       	and	r25, r25
    14fc:	22 f4       	brpl	.+8      	; 0x1506 <__itoa_ncheck+0x12>
    14fe:	bd e2       	ldi	r27, 0x2D	; 45
    1500:	90 95       	com	r25
    1502:	81 95       	neg	r24
    1504:	9f 4f       	sbci	r25, 0xFF	; 255
    1506:	01 c0       	rjmp	.+2      	; 0x150a <__utoa_common>

00001508 <__utoa_ncheck>:
    1508:	bb 27       	eor	r27, r27

0000150a <__utoa_common>:
    150a:	fb 01       	movw	r30, r22
    150c:	55 27       	eor	r21, r21
    150e:	aa 27       	eor	r26, r26
    1510:	88 0f       	add	r24, r24
    1512:	99 1f       	adc	r25, r25
    1514:	aa 1f       	adc	r26, r26
    1516:	a4 17       	cp	r26, r20
    1518:	10 f0       	brcs	.+4      	; 0x151e <__utoa_common+0x14>
    151a:	a4 1b       	sub	r26, r20
    151c:	83 95       	inc	r24
    151e:	50 51       	subi	r21, 0x10	; 16
    1520:	b9 f7       	brne	.-18     	; 0x1510 <__utoa_common+0x6>
    1522:	a0 5d       	subi	r26, 0xD0	; 208
    1524:	aa 33       	cpi	r26, 0x3A	; 58
    1526:	08 f0       	brcs	.+2      	; 0x152a <__utoa_common+0x20>
    1528:	a9 5d       	subi	r26, 0xD9	; 217
    152a:	a1 93       	st	Z+, r26
    152c:	00 97       	sbiw	r24, 0x00	; 0
    152e:	79 f7       	brne	.-34     	; 0x150e <__utoa_common+0x4>
    1530:	b1 11       	cpse	r27, r1
    1532:	b1 93       	st	Z+, r27
    1534:	11 92       	st	Z+, r1
    1536:	cb 01       	movw	r24, r22
    1538:	00 c0       	rjmp	.+0      	; 0x153a <strrev>

0000153a <strrev>:
    153a:	dc 01       	movw	r26, r24
    153c:	fc 01       	movw	r30, r24
    153e:	67 2f       	mov	r22, r23
    1540:	71 91       	ld	r23, Z+
    1542:	77 23       	and	r23, r23
    1544:	e1 f7       	brne	.-8      	; 0x153e <strrev+0x4>
    1546:	32 97       	sbiw	r30, 0x02	; 2
    1548:	04 c0       	rjmp	.+8      	; 0x1552 <strrev+0x18>
    154a:	7c 91       	ld	r23, X
    154c:	6d 93       	st	X+, r22
    154e:	70 83       	st	Z, r23
    1550:	62 91       	ld	r22, -Z
    1552:	ae 17       	cp	r26, r30
    1554:	bf 07       	cpc	r27, r31
    1556:	c8 f3       	brcs	.-14     	; 0x154a <strrev+0x10>
    1558:	08 95       	ret

0000155a <_exit>:
    155a:	f8 94       	cli

0000155c <__stop_program>:
    155c:	ff cf       	rjmp	.-2      	; 0x155c <__stop_program>
